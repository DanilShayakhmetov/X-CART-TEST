<?php

namespace XLite\Model\Proxy\__CG__\XLite\Module\CDev\USPS\Model;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Shipment extends \XLite\Module\CDev\USPS\Model\Shipment implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

        return parent::__get($name);
    }

    /**
     * {@inheritDoc}
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

        return parent::__set($name, $value);
    }

    /**
     * {@inheritDoc}
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

        return parent::__isset($name);

    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'transactionId', 'order', 'requestData', 'responseData', 'printDate', 'price', 'shipmentId', 'trackingNumber', 'trackingData', 'labelURL', 'labelContent', '_previous_state'];
        }

        return ['__isInitialized__', 'id', 'transactionId', 'order', 'requestData', 'responseData', 'printDate', 'price', 'shipmentId', 'trackingNumber', 'trackingData', 'labelURL', 'labelContent', '_previous_state'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Shipment $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getFees()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFees', []);

        return parent::getFees();
    }

    /**
     * {@inheritDoc}
     */
    public function getShippingMethodName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShippingMethodName', []);

        return parent::getShippingMethodName();
    }

    /**
     * {@inheritDoc}
     */
    public function getParcelType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParcelType', []);

        return parent::getParcelType();
    }

    /**
     * {@inheritDoc}
     */
    public function getWeight($units = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeight', [$units]);

        return parent::getWeight($units);
    }

    /**
     * {@inheritDoc}
     */
    public function getLength($units = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLength', [$units]);

        return parent::getLength($units);
    }

    /**
     * {@inheritDoc}
     */
    public function getWidth($units = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWidth', [$units]);

        return parent::getWidth($units);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeight($units = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeight', [$units]);

        return parent::getHeight($units);
    }

    /**
     * {@inheritDoc}
     */
    public function getGirth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGirth', []);

        return parent::getGirth();
    }

    /**
     * {@inheritDoc}
     */
    public function getTrackingStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrackingStatus', []);

        return parent::getTrackingStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getTrackingUpdateDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrackingUpdateDate', []);

        return parent::getTrackingUpdateDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getTrackingShipDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrackingShipDate', []);

        return parent::getTrackingShipDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getTrackingEstimatedDeliveryDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrackingEstimatedDeliveryDate', []);

        return parent::getTrackingEstimatedDeliveryDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getTrackingDeliveryDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrackingDeliveryDate', []);

        return parent::getTrackingDeliveryDate();
    }

    /**
     * {@inheritDoc}
     */
    public function isVoidAvailable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isVoidAvailable', []);

        return parent::isVoidAvailable();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionId', []);

        return parent::getTransactionId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionId($transactionId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionId', [$transactionId]);

        return parent::setTransactionId($transactionId);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrder', []);

        return parent::getOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrder($order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrder', [$order]);

        return parent::setOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function getRequestData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequestData', []);

        return parent::getRequestData();
    }

    /**
     * {@inheritDoc}
     */
    public function setRequestData($requestData)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRequestData', [$requestData]);

        return parent::setRequestData($requestData);
    }

    /**
     * {@inheritDoc}
     */
    public function getResponseData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResponseData', []);

        return parent::getResponseData();
    }

    /**
     * {@inheritDoc}
     */
    public function setResponseData($responseData)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResponseData', [$responseData]);

        return parent::setResponseData($responseData);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrintDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrintDate', []);

        return parent::getPrintDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrintDate($printDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrintDate', [$printDate]);

        return parent::setPrintDate($printDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getShipmentId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShipmentId', []);

        return parent::getShipmentId();
    }

    /**
     * {@inheritDoc}
     */
    public function setShipmentId($shipmentId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShipmentId', [$shipmentId]);

        return parent::setShipmentId($shipmentId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrackingNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrackingNumber', []);

        return parent::getTrackingNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setTrackingNumber($trackingNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrackingNumber', [$trackingNumber]);

        return parent::setTrackingNumber($trackingNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrackingData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrackingData', []);

        return parent::getTrackingData();
    }

    /**
     * {@inheritDoc}
     */
    public function setTrackingData($trackingData)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrackingData', [$trackingData]);

        return parent::setTrackingData($trackingData);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabelURL()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabelURL', []);

        return parent::getLabelURL();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabelURL($labelURL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabelURL', [$labelURL]);

        return parent::setLabelURL($labelURL);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabelContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabelContent', []);

        return parent::getLabelContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabelContent($labelContent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabelContent', [$labelContent]);

        return parent::setLabelContent($labelContent);
    }

    /**
     * {@inheritDoc}
     */
    public function buildDataForREST($withAssociations = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'buildDataForREST', [$withAssociations]);

        return parent::buildDataForREST($withAssociations);
    }

    /**
     * {@inheritDoc}
     */
    public function getModelAssociationsForREST()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModelAssociationsForREST', []);

        return parent::getModelAssociationsForREST();
    }

    /**
     * {@inheritDoc}
     */
    public function _getPreviousState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '_getPreviousState', []);

        return parent::_getPreviousState();
    }

    /**
     * {@inheritDoc}
     */
    public function map(array $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'map', [$data]);

        return parent::map($data);
    }

    /**
     * {@inheritDoc}
     */
    public function __unset($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__unset', [$name]);

        return parent::__unset($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepository()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepository', []);

        return parent::getRepository();
    }

    /**
     * {@inheritDoc}
     */
    public function checkCache()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkCache', []);

        return parent::checkCache();
    }

    /**
     * {@inheritDoc}
     */
    public function detach()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'detach', []);

        return parent::detach();
    }

    /**
     * {@inheritDoc}
     */
    public function __call($method, array $args = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', [$method, $args]);

        return parent::__call($method, $args);
    }

    /**
     * {@inheritDoc}
     */
    public function isPropertyExists($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPropertyExists', [$name]);

        return parent::isPropertyExists($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setterProperty($property, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setterProperty', [$property, $value]);

        return parent::setterProperty($property, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function getterProperty($property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getterProperty', [$property]);

        return parent::getterProperty($property);
    }

    /**
     * {@inheritDoc}
     */
    public function isPersistent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPersistent', []);

        return parent::isPersistent();
    }

    /**
     * {@inheritDoc}
     */
    public function isDetached()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDetached', []);

        return parent::isDetached();
    }

    /**
     * {@inheritDoc}
     */
    public function isManaged()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isManaged', []);

        return parent::isManaged();
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueIdentifierName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueIdentifierName', []);

        return parent::getUniqueIdentifierName();
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueIdentifier', []);

        return parent::getUniqueIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityName', []);

        return parent::getEntityName();
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldMetadata($property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldMetadata', [$property]);

        return parent::getFieldMetadata($property);
    }

    /**
     * {@inheritDoc}
     */
    public function update()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'update', []);

        return parent::update();
    }

    /**
     * {@inheritDoc}
     */
    public function create()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'create', []);

        return parent::create();
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', []);

        return parent::delete();
    }

    /**
     * {@inheritDoc}
     */
    public function processFiles($field, array $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'processFiles', [$field, $data]);

        return parent::processFiles($field, $data);
    }

    /**
     * {@inheritDoc}
     */
    public function cloneEntity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'cloneEntity', []);

        return parent::cloneEntity();
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldsDefinition($class = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldsDefinition', [$class]);

        return parent::getFieldsDefinition($class);
    }

    /**
     * {@inheritDoc}
     */
    public function prepareEntityBeforeCommit($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prepareEntityBeforeCommit', [$type]);

        return parent::prepareEntityBeforeCommit($type);
    }

    /**
     * {@inheritDoc}
     */
    public function isSerializable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSerializable', []);

        return parent::isSerializable();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
