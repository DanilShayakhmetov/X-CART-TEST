<?php

namespace XLite\Model\Proxy\__CG__\XLite\Model;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Cart extends \XLite\Model\Cart implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

        return parent::__get($name);
    }

    /**
     * {@inheritDoc}
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

        return parent::__set($name, $value);
    }

    /**
     * {@inheritDoc}
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

        return parent::__isset($name);

    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'usedCoupons', 'uspsShipment', 'capostParcels', 'capostReturns', 'capostOffice', 'mailchimpStoreId', 'not_finished_order', 'demo', 'reviewKey', 'conversation', 'xpaymentsFraudStatus', 'xpaymentsFraudType', 'xpaymentsFraudCheckTransactionId', 'buyWithApplePay', 'xpaymentsFraudCheckData', 'xpaymentsCards', 'order_id', 'profile', 'orig_profile', 'shipping_id', 'shipping_method_name', 'payment_method_name', 'tracking', 'date', 'lastRenewDate', 'paymentStatus', 'shippingStatus', 'notes', 'adminNotes', 'details', 'trackingNumbers', 'events', 'items', 'surcharges', 'payment_transactions', 'currency', 'orderNumber', 'recent', 'stockStatus', 'addItemError', 'oldPaymentStatus', 'isRemoving', 'oldShippingStatus', 'modifiers', 'shippingProcessor', 'isNotificationSent', 'ignoreCustomerNotifications', 'isNotificationsAllowedFlag', 'statusIsSet', 'paymentTransactionSums', 'sourceAddress', 'xcPendingExport', 'backorderCompetitors', 'backorderProductAmounts', 'temporary', 'justClosed', 'total', 'subtotal', '_previous_state'];
        }

        return ['__isInitialized__', 'usedCoupons', 'uspsShipment', 'capostParcels', 'capostReturns', 'capostOffice', 'mailchimpStoreId', 'not_finished_order', 'demo', 'reviewKey', 'conversation', 'xpaymentsFraudStatus', 'xpaymentsFraudType', 'xpaymentsFraudCheckTransactionId', 'buyWithApplePay', 'xpaymentsFraudCheckData', 'xpaymentsCards', 'order_id', 'profile', 'orig_profile', 'shipping_id', 'shipping_method_name', 'payment_method_name', 'tracking', 'date', 'lastRenewDate', 'paymentStatus', 'shippingStatus', 'notes', 'adminNotes', 'details', 'trackingNumbers', 'events', 'items', 'surcharges', 'payment_transactions', 'currency', 'orderNumber', 'recent', 'stockStatus', 'addItemError', 'oldPaymentStatus', 'isRemoving', 'oldShippingStatus', 'modifiers', 'shippingProcessor', 'isNotificationSent', 'ignoreCustomerNotifications', 'isNotificationsAllowedFlag', 'statusIsSet', 'paymentTransactionSums', 'sourceAddress', 'xcPendingExport', 'backorderCompetitors', 'backorderProductAmounts', 'temporary', 'justClosed', 'total', 'subtotal', '_previous_state'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Cart $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getPaymentMethods()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentMethods', []);

        return parent::getPaymentMethods();
    }

    /**
     * {@inheritDoc}
     */
    public function prepareBeforeSave()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prepareBeforeSave', []);

        return parent::prepareBeforeSave();
    }

    /**
     * {@inheritDoc}
     */
    public function processSucceed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'processSucceed', []);

        return parent::processSucceed();
    }

    /**
     * {@inheritDoc}
     */
    public function unsetPaymentMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unsetPaymentMethod', []);

        return parent::unsetPaymentMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentStatus($paymentStatus = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentStatus', [$paymentStatus]);

        return parent::setPaymentStatus($paymentStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function processNotFinishedOrder($placeMode = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'processNotFinishedOrder', [$placeMode]);

        return parent::processNotFinishedOrder($placeMode);
    }

    /**
     * {@inheritDoc}
     */
    public function isOpen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isOpen', []);

        return parent::isOpen();
    }

    /**
     * {@inheritDoc}
     */
    public function closeNotFinishedOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'closeNotFinishedOrder', []);

        return parent::closeNotFinishedOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function removeNotFinishedOrder($force = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeNotFinishedOrder', [$force]);

        return parent::removeNotFinishedOrder($force);
    }

    /**
     * {@inheritDoc}
     */
    public function hasXpaymentsSubscriptionItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasXpaymentsSubscriptionItems', []);

        return parent::hasXpaymentsSubscriptionItems();
    }

    /**
     * {@inheritDoc}
     */
    public function getSessionVarsToClearOnLogoff()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSessionVarsToClearOnLogoff', []);

        return parent::getSessionVarsToClearOnLogoff();
    }

    /**
     * {@inheritDoc}
     */
    public function addItem(\XLite\Model\OrderItem $newItem)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addItem', [$newItem]);

        return parent::addItem($newItem);
    }

    /**
     * {@inheritDoc}
     */
    public function isRecentlyUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isRecentlyUpdated', []);

        return parent::isRecentlyUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedTime', []);

        return parent::getUpdatedTime();
    }

    /**
     * {@inheritDoc}
     */
    public function renewUpdatedTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'renewUpdatedTime', []);

        return parent::renewUpdatedTime();
    }

    /**
     * {@inheritDoc}
     */
    public function unsetUpdatedTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unsetUpdatedTime', []);

        return parent::unsetUpdatedTime();
    }

    /**
     * {@inheritDoc}
     */
    public function tryClose()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'tryClose', []);

        return parent::tryClose();
    }

    /**
     * {@inheritDoc}
     */
    public function isIgnoreLongCalculations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isIgnoreLongCalculations', []);

        return parent::isIgnoreLongCalculations();
    }

    /**
     * {@inheritDoc}
     */
    public function setIgnoreLongCalculations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIgnoreLongCalculations', []);

        return parent::setIgnoreLongCalculations();
    }

    /**
     * {@inheritDoc}
     */
    public function calculate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'calculate', []);

        return parent::calculate();
    }

    /**
     * {@inheritDoc}
     */
    public function assignOrderNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'assignOrderNumber', []);

        return parent::assignOrderNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function isFlushOnOrderNumberAssign()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isFlushOnOrderNumberAssign', []);

        return parent::isFlushOnOrderNumberAssign();
    }

    /**
     * {@inheritDoc}
     */
    public function calculateInitial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'calculateInitial', []);

        return parent::calculateInitial();
    }

    /**
     * {@inheritDoc}
     */
    public function prepareBeforeCreate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prepareBeforeCreate', []);

        return parent::prepareBeforeCreate();
    }

    /**
     * {@inheritDoc}
     */
    public function clear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clear', []);

        return parent::clear();
    }

    /**
     * {@inheritDoc}
     */
    public function isProductAdded($productId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isProductAdded', [$productId]);

        return parent::isProductAdded($productId);
    }

    /**
     * {@inheritDoc}
     */
    public function getItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItems', []);

        return parent::getItems();
    }

    /**
     * {@inheritDoc}
     */
    public function prepareBeforeRemove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prepareBeforeRemove', []);

        return parent::prepareBeforeRemove();
    }

    /**
     * {@inheritDoc}
     */
    public function markAsOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'markAsOrder', []);

        return parent::markAsOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function hasCartStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasCartStatus', []);

        return parent::hasCartStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function checkCart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkCart', []);

        return parent::checkCart();
    }

    /**
     * {@inheritDoc}
     */
    public function login(\XLite\Model\Profile $profile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'login', [$profile]);

        return parent::login($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function logoff()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'logoff', []);

        return parent::logoff();
    }

    /**
     * {@inheritDoc}
     */
    public function mergeWithProfile(\XLite\Model\Profile $profile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'mergeWithProfile', [$profile]);

        return parent::mergeWithProfile($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function merge(\XLite\Model\Cart $cart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'merge', [$cart]);

        return parent::merge($cart);
    }

    /**
     * {@inheritDoc}
     */
    public function cloneEntity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'cloneEntity', []);

        return parent::cloneEntity();
    }

    /**
     * {@inheritDoc}
     */
    public function addCoupon(\XLite\Module\CDev\Coupons\Model\Coupon $coupon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCoupon', [$coupon]);

        return parent::addCoupon($coupon);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUsedCoupon(\XLite\Module\CDev\Coupons\Model\UsedCoupon $usedCoupon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUsedCoupon', [$usedCoupon]);

        return parent::removeUsedCoupon($usedCoupon);
    }

    /**
     * {@inheritDoc}
     */
    public function containsCoupon(\XLite\Module\CDev\Coupons\Model\Coupon $coupon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'containsCoupon', [$coupon]);

        return parent::containsCoupon($coupon);
    }

    /**
     * {@inheritDoc}
     */
    public function hasSingleUseCoupon()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasSingleUseCoupon', []);

        return parent::hasSingleUseCoupon();
    }

    /**
     * {@inheritDoc}
     */
    public function addUsedCoupons(\XLite\Module\CDev\Coupons\Model\UsedCoupon $usedCoupons)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUsedCoupons', [$usedCoupons]);

        return parent::addUsedCoupons($usedCoupons);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsedCoupons()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsedCoupons', []);

        return parent::getUsedCoupons();
    }

    /**
     * {@inheritDoc}
     */
    public function getValidItemsByCoupon(\XLite\Module\CDev\Coupons\Model\Coupon $coupon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidItemsByCoupon', [$coupon]);

        return parent::getValidItemsByCoupon($coupon);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrivateAttachments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrivateAttachments', []);

        return parent::getPrivateAttachments();
    }

    /**
     * {@inheritDoc}
     */
    public function getDownloadAttachments($availableOnly = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDownloadAttachments', [$availableOnly]);

        return parent::getDownloadAttachments($availableOnly);
    }

    /**
     * {@inheritDoc}
     */
    public function getEventFingerprint(array $exclude = array (
), $init = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventFingerprint', [$exclude, $init]);

        return parent::getEventFingerprint($exclude, $init);
    }

    /**
     * {@inheritDoc}
     */
    public function shouldRegisterChange()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'shouldRegisterChange', []);

        return parent::shouldRegisterChange();
    }

    /**
     * {@inheritDoc}
     */
    public function hasPinCodes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasPinCodes', []);

        return parent::hasPinCodes();
    }

    /**
     * {@inheritDoc}
     */
    public function acquirePINCodes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'acquirePINCodes', []);

        return parent::acquirePINCodes();
    }

    /**
     * {@inheritDoc}
     */
    public function isAllowToProcessPinCodes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAllowToProcessPinCodes', []);

        return parent::isAllowToProcessPinCodes();
    }

    /**
     * {@inheritDoc}
     */
    public function processPINCodes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'processPINCodes', []);

        return parent::processPINCodes();
    }

    /**
     * {@inheritDoc}
     */
    public function getUspsShipment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUspsShipment', []);

        return parent::getUspsShipment();
    }

    /**
     * {@inheritDoc}
     */
    public function setUspsShipment($uspsShipment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUspsShipment', [$uspsShipment]);

        return parent::setUspsShipment($uspsShipment);
    }

    /**
     * {@inheritDoc}
     */
    public function addCapostParcel(\XLite\Module\XC\CanadaPost\Model\Order\Parcel $newParcel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCapostParcel', [$newParcel]);

        return parent::addCapostParcel($newParcel);
    }

    /**
     * {@inheritDoc}
     */
    public function addCapostReturn(\XLite\Module\XC\CanadaPost\Model\ProductsReturn $return)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCapostReturn', [$return]);

        return parent::addCapostReturn($return);
    }

    /**
     * {@inheritDoc}
     */
    public function setCapostOffice(\XLite\Module\XC\CanadaPost\Model\Order\PostOffice $office = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCapostOffice', [$office]);

        return parent::setCapostOffice($office);
    }

    /**
     * {@inheritDoc}
     */
    public function setItems($items)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItems', [$items]);

        return parent::setItems($items);
    }

    /**
     * {@inheritDoc}
     */
    public function createCapostParcels($replace = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createCapostParcels', [$replace]);

        return parent::createCapostParcels($replace);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemById($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemById', [$id]);

        return parent::getItemById($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getCapostShippingMethodCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCapostShippingMethodCode', []);

        return parent::getCapostShippingMethodCode();
    }

    /**
     * {@inheritDoc}
     */
    public function isCapostShippingMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCapostShippingMethod', []);

        return parent::isCapostShippingMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function countCapostParcels()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'countCapostParcels', []);

        return parent::countCapostParcels();
    }

    /**
     * {@inheritDoc}
     */
    public function hasCapostParcels()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasCapostParcels', []);

        return parent::hasCapostParcels();
    }

    /**
     * {@inheritDoc}
     */
    public function getCapostTrackingPins()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCapostTrackingPins', []);

        return parent::getCapostTrackingPins();
    }

    /**
     * {@inheritDoc}
     */
    public function getCapostDeliveryService()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCapostDeliveryService', []);

        return parent::getCapostDeliveryService();
    }

    /**
     * {@inheritDoc}
     */
    public function updateOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateOrder', []);

        return parent::updateOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function renewCapostOffice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'renewCapostOffice', []);

        return parent::renewCapostOffice();
    }

    /**
     * {@inheritDoc}
     */
    public function isCapostOfficeApplicable(\XLite\Module\XC\CanadaPost\Model\Order\PostOffice $office)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCapostOfficeApplicable', [$office]);

        return parent::isCapostOfficeApplicable($office);
    }

    /**
     * {@inheritDoc}
     */
    public function getSelectedShippingRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSelectedShippingRate', []);

        return parent::getSelectedShippingRate();
    }

    /**
     * {@inheritDoc}
     */
    public function getNearestCapostOffices()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNearestCapostOffices', []);

        return parent::getNearestCapostOffices();
    }

    /**
     * {@inheritDoc}
     */
    public function isCapostOfficeAvailable($officeId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCapostOfficeAvailable', [$officeId]);

        return parent::isCapostOfficeAvailable($officeId);
    }

    /**
     * {@inheritDoc}
     */
    public function isSelectedMethodSupportDeliveryToPO()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSelectedMethodSupportDeliveryToPO', []);

        return parent::isSelectedMethodSupportDeliveryToPO();
    }

    /**
     * {@inheritDoc}
     */
    public function addCapostParcels(\XLite\Module\XC\CanadaPost\Model\Order\Parcel $capostParcels)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCapostParcels', [$capostParcels]);

        return parent::addCapostParcels($capostParcels);
    }

    /**
     * {@inheritDoc}
     */
    public function getCapostParcels()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCapostParcels', []);

        return parent::getCapostParcels();
    }

    /**
     * {@inheritDoc}
     */
    public function addCapostReturns(\XLite\Module\XC\CanadaPost\Model\ProductsReturn $capostReturns)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCapostReturns', [$capostReturns]);

        return parent::addCapostReturns($capostReturns);
    }

    /**
     * {@inheritDoc}
     */
    public function getCapostReturns()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCapostReturns', []);

        return parent::getCapostReturns();
    }

    /**
     * {@inheritDoc}
     */
    public function getCapostOffice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCapostOffice', []);

        return parent::getCapostOffice();
    }

    /**
     * {@inheritDoc}
     */
    public function checkStatuses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkStatuses', []);

        return parent::checkStatuses();
    }

    /**
     * {@inheritDoc}
     */
    public function getMailchimpStoreId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMailchimpStoreId', []);

        return parent::getMailchimpStoreId();
    }

    /**
     * {@inheritDoc}
     */
    public function setMailchimpStoreId($mailchimpStoreId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMailchimpStoreId', [$mailchimpStoreId]);

        return parent::setMailchimpStoreId($mailchimpStoreId);
    }

    /**
     * {@inheritDoc}
     */
    public function isNotFinishedOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isNotFinishedOrder', []);

        return parent::isNotFinishedOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function getPrintableOrderNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrintableOrderNumber', []);

        return parent::getPrintableOrderNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function isExpiredTTL()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isExpiredTTL', []);

        return parent::isExpiredTTL();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentMethod', []);

        return parent::getPaymentMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaidTotals()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaidTotals', []);

        return parent::getPaidTotals();
    }

    /**
     * {@inheritDoc}
     */
    public function sendOrderCreatedIfNeeded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'sendOrderCreatedIfNeeded', []);

        return parent::sendOrderCreatedIfNeeded();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotFinishedOrder(\XLite\Model\Order $notFinishedOrder = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotFinishedOrder', [$notFinishedOrder]);

        return parent::setNotFinishedOrder($notFinishedOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotFinishedOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotFinishedOrder', []);

        return parent::getNotFinishedOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function getOnlyExpressCheckoutIfAvailable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOnlyExpressCheckoutIfAvailable', []);

        return parent::getOnlyExpressCheckoutIfAvailable();
    }

    /**
     * {@inheritDoc}
     */
    public function getOnlyCommercePlatformIfAvailable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOnlyCommercePlatformIfAvailable', []);

        return parent::getOnlyCommercePlatformIfAvailable();
    }

    /**
     * {@inheritDoc}
     */
    public function isExpressCheckout($method)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isExpressCheckout', [$method]);

        return parent::isExpressCheckout($method);
    }

    /**
     * {@inheritDoc}
     */
    public function isPaypalForMarketplaces($method)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPaypalForMarketplaces', [$method]);

        return parent::isPaypalForMarketplaces($method);
    }

    /**
     * {@inheritDoc}
     */
    public function isPaypalCredit($method)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPaypalCredit', [$method]);

        return parent::isPaypalCredit($method);
    }

    /**
     * {@inheritDoc}
     */
    public function isPaypalCommercePlatform($method)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPaypalCommercePlatform', [$method]);

        return parent::isPaypalCommercePlatform($method);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionIds()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionIds', []);

        return parent::getTransactionIds();
    }

    /**
     * {@inheritDoc}
     */
    public function isPaypalMethod($method)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPaypalMethod', [$method]);

        return parent::isPaypalMethod($method);
    }

    /**
     * {@inheritDoc}
     */
    public function isDemo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDemo', []);

        return parent::isDemo();
    }

    /**
     * {@inheritDoc}
     */
    public function setDemo($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDemo', [$value]);

        return parent::setDemo($value);
    }

    /**
     * {@inheritDoc}
     */
    public function dropDemoFlagOnUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'dropDemoFlagOnUpdate', []);

        return parent::dropDemoFlagOnUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function createReviewKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createReviewKey', []);

        return parent::createReviewKey();
    }

    /**
     * {@inheritDoc}
     */
    public function getReviewKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReviewKey', []);

        return parent::getReviewKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setReviewKey($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReviewKey', [$value]);

        return parent::setReviewKey($value);
    }

    /**
     * {@inheritDoc}
     */
    public function isStripeMethod($method)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isStripeMethod', [$method]);

        return parent::isStripeMethod($method);
    }

    /**
     * {@inheritDoc}
     */
    public function getConversation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConversation', []);

        return parent::getConversation();
    }

    /**
     * {@inheritDoc}
     */
    public function setConversation($conversation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConversation', [$conversation]);

        return parent::setConversation($conversation);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderConversation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderConversation', []);

        return parent::getOrderConversation();
    }

    /**
     * {@inheritDoc}
     */
    public function getNameForMessages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameForMessages', []);

        return parent::getNameForMessages();
    }

    /**
     * {@inheritDoc}
     */
    public function buildNewMessage($author, $body = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'buildNewMessage', [$author, $body]);

        return parent::buildNewMessage($author, $body);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessages', []);

        return parent::getMessages();
    }

    /**
     * {@inheritDoc}
     */
    public function isOrderMessagesEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isOrderMessagesEnabled', []);

        return parent::isOrderMessagesEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function countUnreadMessages(\XLite\Model\Profile $profile = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'countUnreadMessages', [$profile]);

        return parent::countUnreadMessages($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function markAsBuyWithApplePay($value = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'markAsBuyWithApplePay', [$value]);

        return parent::markAsBuyWithApplePay($value);
    }

    /**
     * {@inheritDoc}
     */
    public function isBuyWithApplePay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isBuyWithApplePay', []);

        return parent::isBuyWithApplePay();
    }

    /**
     * {@inheritDoc}
     */
    public function getXpaymentsFraudStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXpaymentsFraudStatus', []);

        return parent::getXpaymentsFraudStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setXpaymentsFraudStatus($xpaymentsFraudStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setXpaymentsFraudStatus', [$xpaymentsFraudStatus]);

        return parent::setXpaymentsFraudStatus($xpaymentsFraudStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getXpaymentsFraudType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXpaymentsFraudType', []);

        return parent::getXpaymentsFraudType();
    }

    /**
     * {@inheritDoc}
     */
    public function setXpaymentsFraudType($xpaymentsFraudType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setXpaymentsFraudType', [$xpaymentsFraudType]);

        return parent::setXpaymentsFraudType($xpaymentsFraudType);
    }

    /**
     * {@inheritDoc}
     */
    public function getXpaymentsFraudCheckTransactionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXpaymentsFraudCheckTransactionId', []);

        return parent::getXpaymentsFraudCheckTransactionId();
    }

    /**
     * {@inheritDoc}
     */
    public function setXpaymentsFraudCheckTransactionId($xpaymentsFraudCheckTransactionId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setXpaymentsFraudCheckTransactionId', [$xpaymentsFraudCheckTransactionId]);

        return parent::setXpaymentsFraudCheckTransactionId($xpaymentsFraudCheckTransactionId);
    }

    /**
     * {@inheritDoc}
     */
    public function getXpaymentsFraudCheckData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXpaymentsFraudCheckData', []);

        return parent::getXpaymentsFraudCheckData();
    }

    /**
     * {@inheritDoc}
     */
    public function getXpaymentsFraudInfoAnchor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXpaymentsFraudInfoAnchor', []);

        return parent::getXpaymentsFraudInfoAnchor();
    }

    /**
     * {@inheritDoc}
     */
    public function isFraudStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isFraudStatus', []);

        return parent::isFraudStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getXpaymentsCards()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXpaymentsCards', []);

        return parent::getXpaymentsCards();
    }

    /**
     * {@inheritDoc}
     */
    public function getCalculatedPaymentStatus($override = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCalculatedPaymentStatus', [$override]);

        return parent::getCalculatedPaymentStatus($override);
    }

    /**
     * {@inheritDoc}
     */
    public function getAomTotalDifference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAomTotalDifference', []);

        return parent::getAomTotalDifference();
    }

    /**
     * {@inheritDoc}
     */
    public function isAomTotalDifferencePositive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAomTotalDifferencePositive', []);

        return parent::isAomTotalDifferencePositive();
    }

    /**
     * {@inheritDoc}
     */
    public function getActiveXpaymentsCards()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActiveXpaymentsCards', []);

        return parent::getActiveXpaymentsCards();
    }

    /**
     * {@inheritDoc}
     */
    public function isXpaymentsChargeDifferenceAvailable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isXpaymentsChargeDifferenceAvailable', []);

        return parent::isXpaymentsChargeDifferenceAvailable();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentTransactionSums()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentTransactionSums', []);

        return parent::getPaymentTransactionSums();
    }

    /**
     * {@inheritDoc}
     */
    public function hasXpaymentsSubscriptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasXpaymentsSubscriptions', []);

        return parent::hasXpaymentsSubscriptions();
    }

    /**
     * {@inheritDoc}
     */
    public function isXpaymentsSubscriptionPayment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isXpaymentsSubscriptionPayment', []);

        return parent::isXpaymentsSubscriptionPayment();
    }

    /**
     * {@inheritDoc}
     */
    public function getXpaymentsSubscription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXpaymentsSubscription', []);

        return parent::getXpaymentsSubscription();
    }

    /**
     * {@inheritDoc}
     */
    public function getShippingRates()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShippingRates', []);

        return parent::getShippingRates();
    }

    /**
     * {@inheritDoc}
     */
    public function getShippingAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShippingAddress', []);

        return parent::getShippingAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function isTemporary()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isTemporary', []);

        return parent::isTemporary();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemporary($temporary)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemporary', [$temporary]);

        return parent::setTemporary($temporary);
    }

    /**
     * {@inheritDoc}
     */
    public function isJustClosed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isJustClosed', []);

        return parent::isJustClosed();
    }

    /**
     * {@inheritDoc}
     */
    public function getAddItemError()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddItemError', []);

        return parent::getAddItemError();
    }

    /**
     * {@inheritDoc}
     */
    public function getItemByItem(\XLite\Model\OrderItem $item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemByItem', [$item]);

        return parent::getItemByItem($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemByItemKey($key)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemByItemKey', [$key]);

        return parent::getItemByItemKey($key);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemByItemId($itemId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemByItemId', [$itemId]);

        return parent::getItemByItemId($itemId);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemsByProductId($productId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemsByProductId', [$productId]);

        return parent::getItemsByProductId($productId);
    }

    /**
     * {@inheritDoc}
     */
    public function normalizeItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'normalizeItems', []);

        return parent::normalizeItems();
    }

    /**
     * {@inheritDoc}
     */
    public function countItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'countItems', []);

        return parent::countItems();
    }

    /**
     * {@inheritDoc}
     */
    public function countQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'countQuantity', []);

        return parent::countQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function getFailureReason()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFailureReason', []);

        return parent::getFailureReason();
    }

    /**
     * {@inheritDoc}
     */
    public function isEmpty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEmpty', []);

        return parent::isEmpty();
    }

    /**
     * {@inheritDoc}
     */
    public function isMinOrderAmountError()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isMinOrderAmountError', []);

        return parent::isMinOrderAmountError();
    }

    /**
     * {@inheritDoc}
     */
    public function isMaxOrderAmountError()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isMaxOrderAmountError', []);

        return parent::isMaxOrderAmountError();
    }

    /**
     * {@inheritDoc}
     */
    public function isProcessed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isProcessed', []);

        return parent::isProcessed();
    }

    /**
     * {@inheritDoc}
     */
    public function isQueued()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isQueued', []);

        return parent::isQueued();
    }

    /**
     * {@inheritDoc}
     */
    public function getItemsWithWrongAmounts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemsWithWrongAmounts', []);

        return parent::getItemsWithWrongAmounts();
    }

    /**
     * {@inheritDoc}
     */
    public function setProfile(\XLite\Model\Profile $profile = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfile', [$profile]);

        return parent::setProfile($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrigProfile(\XLite\Model\Profile $profile = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrigProfile', [$profile]);

        return parent::setOrigProfile($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function setProfileCopy(\XLite\Model\Profile $profile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfileCopy', [$profile]);

        return parent::setProfileCopy($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function cloneOrderAsTemporary()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'cloneOrderAsTemporary', []);

        return parent::cloneOrderAsTemporary();
    }

    /**
     * {@inheritDoc}
     */
    public function getStockStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStockStatus', []);

        return parent::getStockStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStockStatus($stockStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStockStatus', [$stockStatus]);

        return parent::setStockStatus($stockStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getShippingMethodName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShippingMethodName', []);

        return parent::getShippingMethodName();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentMethodName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentMethodName', []);

        return parent::getPaymentMethodName();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentMethodId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentMethodId', []);

        return parent::getPaymentMethodId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOldPaymentStatus($paymentStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOldPaymentStatus', [$paymentStatus]);

        return parent::setOldPaymentStatus($paymentStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function setOldShippingStatus($shippingStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOldShippingStatus', [$shippingStatus]);

        return parent::setOldShippingStatus($shippingStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemsAmountKeyFingerprint()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemsAmountKeyFingerprint', []);

        return parent::getItemsAmountKeyFingerprint();
    }

    /**
     * {@inheritDoc}
     */
    public function getItemsFingerprint()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemsFingerprint', []);

        return parent::getItemsFingerprint();
    }

    /**
     * {@inheritDoc}
     */
    public function getItemsFingerprintByProductId($productId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemsFingerprintByProductId', [$productId]);

        return parent::getItemsFingerprintByProductId($productId);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getSourceAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSourceAddress', []);

        return parent::getSourceAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function getDetail($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetail', [$name]);

        return parent::getDetail($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetailValue($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetailValue', [$name]);

        return parent::getDetailValue($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setDetail($name, $value, $label = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDetail', [$name, $value, $label]);

        return parent::setDetail($name, $value, $label);
    }

    /**
     * {@inheritDoc}
     */
    public function getMeaningDetails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMeaningDetails', []);

        return parent::getMeaningDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function isBackordered()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isBackordered', []);

        return parent::isBackordered();
    }

    /**
     * {@inheritDoc}
     */
    public function sendOrderWaitingForApproveIfNeeded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'sendOrderWaitingForApproveIfNeeded', []);

        return parent::sendOrderWaitingForApproveIfNeeded();
    }

    /**
     * {@inheritDoc}
     */
    public function getValidStatusesForCreateNotification()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidStatusesForCreateNotification', []);

        return parent::getValidStatusesForCreateNotification();
    }

    /**
     * {@inheritDoc}
     */
    public function markAsCart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'markAsCart', []);

        return parent::markAsCart();
    }

    /**
     * {@inheritDoc}
     */
    public function refreshItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'refreshItems', []);

        return parent::refreshItems();
    }

    /**
     * {@inheritDoc}
     */
    public function isRemoving()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isRemoving', []);

        return parent::isRemoving();
    }

    /**
     * {@inheritDoc}
     */
    public function renewPaymentMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'renewPaymentMethod', []);

        return parent::renewPaymentMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function checkItemKeyEqual(\XLite\Model\OrderItem $item, $key)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkItemKeyEqual', [$item, $key]);

        return parent::checkItemKeyEqual($item, $key);
    }

    /**
     * {@inheritDoc}
     */
    public function checkItemIdEqual(\XLite\Model\OrderItem $item, $itemId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkItemIdEqual', [$item, $itemId]);

        return parent::checkItemIdEqual($item, $itemId);
    }

    /**
     * {@inheritDoc}
     */
    public function checkDetailName(\XLite\Model\OrderDetail $detail, $name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkDetailName', [$detail, $name]);

        return parent::checkDetailName($detail, $name);
    }

    /**
     * {@inheritDoc}
     */
    public function checkPaymentTransactionStatusEqual(\XLite\Model\Payment\Transaction $transaction, $status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkPaymentTransactionStatusEqual', [$transaction, $status]);

        return parent::checkPaymentTransactionStatusEqual($transaction, $status);
    }

    /**
     * {@inheritDoc}
     */
    public function checkPaymentTransactionOpen(\XLite\Model\Payment\Transaction $transaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkPaymentTransactionOpen', [$transaction]);

        return parent::checkPaymentTransactionOpen($transaction);
    }

    /**
     * {@inheritDoc}
     */
    public function isItemProductIdEqual(\XLite\Model\OrderItem $item, $productId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isItemProductIdEqual', [$item, $productId]);

        return parent::isItemProductIdEqual($item, $productId);
    }

    /**
     * {@inheritDoc}
     */
    public function checkLastPaymentMethod(\XLite\Model\Payment\Method $pmethod, $lastPaymentId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkLastPaymentMethod', [$pmethod, $lastPaymentId]);

        return parent::checkLastPaymentMethod($pmethod, $lastPaymentId);
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentMethod($paymentMethod, $value = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentMethod', [$paymentMethod, $value]);

        return parent::setPaymentMethod($paymentMethod, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivePaymentTransactions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivePaymentTransactions', []);

        return parent::getActivePaymentTransactions();
    }

    /**
     * {@inheritDoc}
     */
    public function getVisiblePaymentMethods()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisiblePaymentMethods', []);

        return parent::getVisiblePaymentMethods();
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstOpenPaymentTransaction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstOpenPaymentTransaction', []);

        return parent::getFirstOpenPaymentTransaction();
    }

    /**
     * {@inheritDoc}
     */
    public function getOpenTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOpenTotal', []);

        return parent::getOpenTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaidTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaidTotal', []);

        return parent::getPaidTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function hasUnpaidTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasUnpaidTotal', []);

        return parent::hasUnpaidTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function getPayedTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayedTotal', []);

        return parent::getPayedTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function isPayed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPayed', []);

        return parent::isPayed();
    }

    /**
     * {@inheritDoc}
     */
    public function hasInprogressPayments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasInprogressPayments', []);

        return parent::hasInprogressPayments();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastShippingId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastShippingId', []);

        return parent::getLastShippingId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastShippingId($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastShippingId', [$value]);

        return parent::setLastShippingId($value);
    }

    /**
     * {@inheritDoc}
     */
    public function renewShippingMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'renewShippingMethod', []);

        return parent::renewShippingMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function getShippingProcessor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShippingProcessor', []);

        return parent::getShippingProcessor();
    }

    /**
     * {@inheritDoc}
     */
    public function isTrackingInformationForm($trackingNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isTrackingInformationForm', [$trackingNumber]);

        return parent::isTrackingInformationForm($trackingNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrackingInformationURL($trackingNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrackingInformationURL', [$trackingNumber]);

        return parent::getTrackingInformationURL($trackingNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrackingInformationParams($trackingNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrackingInformationParams', [$trackingNumber]);

        return parent::getTrackingInformationParams($trackingNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrackingInformationMethod($trackingNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrackingInformationMethod', [$trackingNumber]);

        return parent::getTrackingInformationMethod($trackingNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsNotificationSent($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsNotificationSent', [$value]);

        return parent::setIsNotificationSent($value);
    }

    /**
     * {@inheritDoc}
     */
    public function isNotificationSent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isNotificationSent', []);

        return parent::isNotificationSent();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsNotificationsAllowedFlag($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsNotificationsAllowedFlag', [$value]);

        return parent::setIsNotificationsAllowedFlag($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setIgnoreCustomerNotifications($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIgnoreCustomerNotifications', [$value]);

        return parent::setIgnoreCustomerNotifications($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiers', []);

        return parent::getModifiers();
    }

    /**
     * {@inheritDoc}
     */
    public function getModifier($type, $code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifier', [$type, $code]);

        return parent::getModifier($type, $code);
    }

    /**
     * {@inheritDoc}
     */
    public function isModifierByType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isModifierByType', [$type]);

        return parent::isModifierByType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiersByType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiersByType', [$type]);

        return parent::getModifiersByType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemsExcludeSurcharges()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemsExcludeSurcharges', []);

        return parent::getItemsExcludeSurcharges();
    }

    /**
     * {@inheritDoc}
     */
    public function getItemsIncludeSurchargesTotals($forCartItems = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemsIncludeSurchargesTotals', [$forCartItems]);

        return parent::getItemsIncludeSurchargesTotals($forCartItems);
    }

    /**
     * {@inheritDoc}
     */
    public function recalculate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'recalculate', []);

        return parent::recalculate();
    }

    /**
     * {@inheritDoc}
     */
    public function renew()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'renew', []);

        return parent::renew();
    }

    /**
     * {@inheritDoc}
     */
    public function renewSoft()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'renewSoft', []);

        return parent::renewSoft();
    }

    /**
     * {@inheritDoc}
     */
    public function resetSurcharges()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'resetSurcharges', []);

        return parent::resetSurcharges();
    }

    /**
     * {@inheritDoc}
     */
    public function calculateInitialValues()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'calculateInitialValues', []);

        return parent::calculateInitialValues();
    }

    /**
     * {@inheritDoc}
     */
    public function getSurchargesByType($type = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurchargesByType', [$type]);

        return parent::getSurchargesByType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getSurchargesSubtotal($type = NULL, $include = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurchargesSubtotal', [$type, $include]);

        return parent::getSurchargesSubtotal($type, $include);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplaySubtotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplaySubtotal', []);

        return parent::getDisplaySubtotal();
    }

    /**
     * {@inheritDoc}
     */
    public function getSurchargesTotal($type = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurchargesTotal', [$type]);

        return parent::getSurchargesTotal($type);
    }

    /**
     * {@inheritDoc}
     */
    public function prepareEntityBeforeCommit($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prepareEntityBeforeCommit', [$type]);

        return parent::prepareEntityBeforeCommit($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentStatusCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentStatusCode', []);

        return parent::getPaymentStatusCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getShippingStatusCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShippingStatusCode', []);

        return parent::getShippingStatusCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setShippingStatus($shippingStatus = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShippingStatus', [$shippingStatus]);

        return parent::setShippingStatus($shippingStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function processStatus($status, $type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'processStatus', [$status, $type]);

        return parent::processStatus($status, $type);
    }

    /**
     * {@inheritDoc}
     */
    public function checkInventory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkInventory', []);

        return parent::checkInventory();
    }

    /**
     * {@inheritDoc}
     */
    public function transformItemsAttributes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'transformItemsAttributes', []);

        return parent::transformItemsAttributes();
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowedActions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowedActions', []);

        return parent::getAllowedActions();
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowedPaymentActions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowedPaymentActions', []);

        return parent::getAllowedPaymentActions();
    }

    /**
     * {@inheritDoc}
     */
    public function getRawPaymentTransactionSums($override = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRawPaymentTransactionSums', [$override]);

        return parent::getRawPaymentTransactionSums($override);
    }

    /**
     * {@inheritDoc}
     */
    public function isShippingSectionVisible()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isShippingSectionVisible', []);

        return parent::isShippingSectionVisible();
    }

    /**
     * {@inheritDoc}
     */
    public function isPaymentSectionVisible()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPaymentSectionVisible', []);

        return parent::isPaymentSectionVisible();
    }

    /**
     * {@inheritDoc}
     */
    public function isPaymentShippingSectionVisible()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPaymentShippingSectionVisible', []);

        return parent::isPaymentShippingSectionVisible();
    }

    /**
     * {@inheritDoc}
     */
    public function renewPaymentStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'renewPaymentStatus', []);

        return parent::renewPaymentStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentStatusByTransaction(\XLite\Model\Payment\Transaction $transaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentStatusByTransaction', [$transaction]);

        return parent::setPaymentStatusByTransaction($transaction);
    }

    /**
     * {@inheritDoc}
     */
    public function isShippable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isShippable', []);

        return parent::isShippable();
    }

    /**
     * {@inheritDoc}
     */
    public function getAddresses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddresses', []);

        return parent::getAddresses();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentTransactionData($isPrimary = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentTransactionData', [$isPrimary]);

        return parent::getPaymentTransactionData($isPrimary);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentTransactionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentTransactionId', []);

        return parent::getPaymentTransactionId();
    }

    /**
     * {@inheritDoc}
     */
    public function isOfflineProcessorUsed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isOfflineProcessorUsed', []);

        return parent::isOfflineProcessorUsed();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentProcessor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentProcessor', []);

        return parent::getPaymentProcessor();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderId', []);

        return parent::getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    public function setShippingId($shippingId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShippingId', [$shippingId]);

        return parent::setShippingId($shippingId);
    }

    /**
     * {@inheritDoc}
     */
    public function getShippingId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShippingId', []);

        return parent::getShippingId();
    }

    /**
     * {@inheritDoc}
     */
    public function setShippingMethodName($shippingMethodName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShippingMethodName', [$shippingMethodName]);

        return parent::setShippingMethodName($shippingMethodName);
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentMethodName($paymentMethodName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentMethodName', [$paymentMethodName]);

        return parent::setPaymentMethodName($paymentMethodName);
    }

    /**
     * {@inheritDoc}
     */
    public function setTracking($tracking)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTracking', [$tracking]);

        return parent::setTracking($tracking);
    }

    /**
     * {@inheritDoc}
     */
    public function getTracking()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTracking', []);

        return parent::getTracking();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastRenewDate($lastRenewDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastRenewDate', [$lastRenewDate]);

        return parent::setLastRenewDate($lastRenewDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastRenewDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastRenewDate', []);

        return parent::getLastRenewDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotes($notes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotes', [$notes]);

        return parent::setNotes($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', []);

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdminNotes($adminNotes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdminNotes', [$adminNotes]);

        return parent::setAdminNotes($adminNotes);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdminNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdminNotes', []);

        return parent::getAdminNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderNumber($orderNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderNumber', [$orderNumber]);

        return parent::setOrderNumber($orderNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderNumber', []);

        return parent::getOrderNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setRecent($recent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRecent', [$recent]);

        return parent::setRecent($recent);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecent', []);

        return parent::getRecent();
    }

    /**
     * {@inheritDoc}
     */
    public function setXcPendingExport($xcPendingExport)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setXcPendingExport', [$xcPendingExport]);

        return parent::setXcPendingExport($xcPendingExport);
    }

    /**
     * {@inheritDoc}
     */
    public function getXcPendingExport()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXcPendingExport', []);

        return parent::getXcPendingExport();
    }

    /**
     * {@inheritDoc}
     */
    public function getBackorderCompetitors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackorderCompetitors', []);

        return parent::getBackorderCompetitors();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackorderCompetitors($backorderCompetitors)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackorderCompetitors', [$backorderCompetitors]);

        return parent::setBackorderCompetitors($backorderCompetitors);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotal', []);

        return parent::getTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubtotal', []);

        return parent::getSubtotal();
    }

    /**
     * {@inheritDoc}
     */
    public function getProfile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfile', []);

        return parent::getProfile();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrigProfile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrigProfile', []);

        return parent::getOrigProfile();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentStatus', []);

        return parent::getPaymentStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getShippingStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShippingStatus', []);

        return parent::getShippingStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function addDetails(\XLite\Model\OrderDetail $details)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDetails', [$details]);

        return parent::addDetails($details);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetails', []);

        return parent::getDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function addTrackingNumbers(\XLite\Model\OrderTrackingNumber $trackingNumbers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTrackingNumbers', [$trackingNumbers]);

        return parent::addTrackingNumbers($trackingNumbers);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrackingNumbers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrackingNumbers', []);

        return parent::getTrackingNumbers();
    }

    /**
     * {@inheritDoc}
     */
    public function addEvents(\XLite\Model\OrderHistoryEvents $events)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEvents', [$events]);

        return parent::addEvents($events);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvents', []);

        return parent::getEvents();
    }

    /**
     * {@inheritDoc}
     */
    public function addItems(\XLite\Model\OrderItem $items)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addItems', [$items]);

        return parent::addItems($items);
    }

    /**
     * {@inheritDoc}
     */
    public function addSurcharges(\XLite\Model\Order\Surcharge $surcharges)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSurcharges', [$surcharges]);

        return parent::addSurcharges($surcharges);
    }

    /**
     * {@inheritDoc}
     */
    public function getSurcharges()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurcharges', []);

        return parent::getSurcharges();
    }

    /**
     * {@inheritDoc}
     */
    public function addPaymentTransactions(\XLite\Model\Payment\Transaction $paymentTransactions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPaymentTransactions', [$paymentTransactions]);

        return parent::addPaymentTransactions($paymentTransactions);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentTransactions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentTransactions', []);

        return parent::getPaymentTransactions();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrency(\XLite\Model\Currency $currency = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrency', [$currency]);

        return parent::setCurrency($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrency', []);

        return parent::getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function updateEmptyShippingID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateEmptyShippingID', []);

        return parent::updateEmptyShippingID();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotal($total)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotal', [$total]);

        return parent::setTotal($total);
    }

    /**
     * {@inheritDoc}
     */
    public function setSubtotal($subtotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubtotal', [$subtotal]);

        return parent::setSubtotal($subtotal);
    }

    /**
     * {@inheritDoc}
     */
    public function getExcludeSurcharges()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExcludeSurcharges', []);

        return parent::getExcludeSurcharges();
    }

    /**
     * {@inheritDoc}
     */
    public function getIncludeSurcharges()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIncludeSurcharges', []);

        return parent::getIncludeSurcharges();
    }

    /**
     * {@inheritDoc}
     */
    public function getExcludeSurchargesByType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExcludeSurchargesByType', [$type]);

        return parent::getExcludeSurchargesByType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getSurchargeTotals()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurchargeTotals', []);

        return parent::getSurchargeTotals();
    }

    /**
     * {@inheritDoc}
     */
    public function getCompleteSurchargeTotals()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompleteSurchargeTotals', []);

        return parent::getCompleteSurchargeTotals();
    }

    /**
     * {@inheritDoc}
     */
    public function calculateSurchargeTotals($surcharges)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'calculateSurchargeTotals', [$surcharges]);

        return parent::calculateSurchargeTotals($surcharges);
    }

    /**
     * {@inheritDoc}
     */
    public function getSurchargeSum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurchargeSum', []);

        return parent::getSurchargeSum();
    }

    /**
     * {@inheritDoc}
     */
    public function getSurchargeSumByType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurchargeSumByType', [$type]);

        return parent::getSurchargeSumByType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getSurchargeTotalByType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurchargeTotalByType', [$type]);

        return parent::getSurchargeTotalByType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function resetSurcharge($surcharge)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'resetSurcharge', [$surcharge]);

        return parent::resetSurcharge($surcharge);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSurcharge($surcharge)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSurcharge', [$surcharge]);

        return parent::removeSurcharge($surcharge);
    }

    /**
     * {@inheritDoc}
     */
    public function compareSurcharges(array $oldSurcharges)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'compareSurcharges', [$oldSurcharges]);

        return parent::compareSurcharges($oldSurcharges);
    }

    /**
     * {@inheritDoc}
     */
    public function buildDataForREST($withAssociations = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'buildDataForREST', [$withAssociations]);

        return parent::buildDataForREST($withAssociations);
    }

    /**
     * {@inheritDoc}
     */
    public function getModelAssociationsForREST()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModelAssociationsForREST', []);

        return parent::getModelAssociationsForREST();
    }

    /**
     * {@inheritDoc}
     */
    public function _getPreviousState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '_getPreviousState', []);

        return parent::_getPreviousState();
    }

    /**
     * {@inheritDoc}
     */
    public function map(array $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'map', [$data]);

        return parent::map($data);
    }

    /**
     * {@inheritDoc}
     */
    public function __unset($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__unset', [$name]);

        return parent::__unset($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepository()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepository', []);

        return parent::getRepository();
    }

    /**
     * {@inheritDoc}
     */
    public function checkCache()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkCache', []);

        return parent::checkCache();
    }

    /**
     * {@inheritDoc}
     */
    public function detach()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'detach', []);

        return parent::detach();
    }

    /**
     * {@inheritDoc}
     */
    public function __call($method, array $args = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', [$method, $args]);

        return parent::__call($method, $args);
    }

    /**
     * {@inheritDoc}
     */
    public function isPropertyExists($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPropertyExists', [$name]);

        return parent::isPropertyExists($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setterProperty($property, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setterProperty', [$property, $value]);

        return parent::setterProperty($property, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function getterProperty($property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getterProperty', [$property]);

        return parent::getterProperty($property);
    }

    /**
     * {@inheritDoc}
     */
    public function isPersistent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPersistent', []);

        return parent::isPersistent();
    }

    /**
     * {@inheritDoc}
     */
    public function isDetached()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDetached', []);

        return parent::isDetached();
    }

    /**
     * {@inheritDoc}
     */
    public function isManaged()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isManaged', []);

        return parent::isManaged();
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueIdentifierName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueIdentifierName', []);

        return parent::getUniqueIdentifierName();
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueIdentifier', []);

        return parent::getUniqueIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityName', []);

        return parent::getEntityName();
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldMetadata($property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldMetadata', [$property]);

        return parent::getFieldMetadata($property);
    }

    /**
     * {@inheritDoc}
     */
    public function update()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'update', []);

        return parent::update();
    }

    /**
     * {@inheritDoc}
     */
    public function create()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'create', []);

        return parent::create();
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', []);

        return parent::delete();
    }

    /**
     * {@inheritDoc}
     */
    public function processFiles($field, array $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'processFiles', [$field, $data]);

        return parent::processFiles($field, $data);
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldsDefinition($class = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldsDefinition', [$class]);

        return parent::getFieldsDefinition($class);
    }

    /**
     * {@inheritDoc}
     */
    public function isSerializable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSerializable', []);

        return parent::isSerializable();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
