<?php

namespace XLite\Model\Proxy\__CG__\XLite\Model;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Profile extends \XLite\Model\Profile implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

        return parent::__get($name);
    }

    /**
     * {@inheritDoc}
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

        return parent::__set($name, $value);
    }

    /**
     * {@inheritDoc}
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

        return parent::__isset($name);

    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'socialLoginProvider', 'socialLoginId', 'gaClientId', 'braintree_customer_id', 'braintreeCreditCards', 'braintreeCreditCardsHash', 'saveCardBoxChecked', 'conciergeUserId', 'mail_chimp_lists', 'mail_chimp_interests', 'mail_chimp_segments', 'conversations', 'xpaymentsCustomerId', 'xpaymentsCardsCache', 'profile_id', 'oldLogin', 'login', 'password', 'password_hint', 'password_hint_answer', 'passwordResetKey', 'passwordResetKeyDate', 'access_level', 'cms_profile_id', 'cms_name', 'added', 'first_login', 'last_login', 'status', 'statusComment', 'referer', 'order', 'event', 'language', 'last_shipping_id', 'last_payment_id', 'membership', 'pending_membership', 'addresses', 'roles', 'orders_count', 'anonymous', 'forceChangePassword', 'dateOfLoginAttempt', 'countOfLoginAttempts', 'searchFakeField', 'xcPendingExport', 'lastCheckoutEmail', '_previous_state'];
        }

        return ['__isInitialized__', 'socialLoginProvider', 'socialLoginId', 'gaClientId', 'braintree_customer_id', 'braintreeCreditCards', 'braintreeCreditCardsHash', 'saveCardBoxChecked', 'conciergeUserId', 'mail_chimp_lists', 'mail_chimp_interests', 'mail_chimp_segments', 'conversations', 'xpaymentsCustomerId', 'xpaymentsCardsCache', 'profile_id', 'oldLogin', 'login', 'password', 'password_hint', 'password_hint_answer', 'passwordResetKey', 'passwordResetKeyDate', 'access_level', 'cms_profile_id', 'cms_name', 'added', 'first_login', 'last_login', 'status', 'statusComment', 'referer', 'order', 'event', 'language', 'last_shipping_id', 'last_payment_id', 'membership', 'pending_membership', 'addresses', 'roles', 'orders_count', 'anonymous', 'forceChangePassword', 'dateOfLoginAttempt', 'countOfLoginAttempts', 'searchFakeField', 'xcPendingExport', 'lastCheckoutEmail', '_previous_state'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Profile $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function isSocialProfile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSocialProfile', []);

        return parent::isSocialProfile();
    }

    /**
     * {@inheritDoc}
     */
    public function setSocialLoginProvider($socialLoginProvider)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSocialLoginProvider', [$socialLoginProvider]);

        return parent::setSocialLoginProvider($socialLoginProvider);
    }

    /**
     * {@inheritDoc}
     */
    public function getSocialLoginProvider()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSocialLoginProvider', []);

        return parent::getSocialLoginProvider();
    }

    /**
     * {@inheritDoc}
     */
    public function setSocialLoginId($socialLoginId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSocialLoginId', [$socialLoginId]);

        return parent::setSocialLoginId($socialLoginId);
    }

    /**
     * {@inheritDoc}
     */
    public function getSocialLoginId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSocialLoginId', []);

        return parent::getSocialLoginId();
    }

    /**
     * {@inheritDoc}
     */
    public function getGaClientId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGaClientId', []);

        return parent::getGaClientId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGaClientId($gaClientId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGaClientId', [$gaClientId]);

        return parent::setGaClientId($gaClientId);
    }

    /**
     * {@inheritDoc}
     */
    public function getBraintreeCreditCards()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBraintreeCreditCards', []);

        return parent::getBraintreeCreditCards();
    }

    /**
     * {@inheritDoc}
     */
    public function getBraintreeCreditCardsHash()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBraintreeCreditCardsHash', []);

        return parent::getBraintreeCreditCardsHash();
    }

    /**
     * {@inheritDoc}
     */
    public function setBraintreeCustomerId($braintreeCustomerId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBraintreeCustomerId', [$braintreeCustomerId]);

        return parent::setBraintreeCustomerId($braintreeCustomerId);
    }

    /**
     * {@inheritDoc}
     */
    public function getBraintreeCustomerId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBraintreeCustomerId', []);

        return parent::getBraintreeCustomerId();
    }

    /**
     * {@inheritDoc}
     */
    public function getSaveCardBoxChecked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSaveCardBoxChecked', []);

        return parent::getSaveCardBoxChecked();
    }

    /**
     * {@inheritDoc}
     */
    public function setSaveCardBoxChecked($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSaveCardBoxChecked', [$status]);

        return parent::setSaveCardBoxChecked($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getConciergeUserId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConciergeUserId', []);

        return parent::getConciergeUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setConciergeUserId($conciergeUserId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConciergeUserId', [$conciergeUserId]);

        return parent::setConciergeUserId($conciergeUserId);
    }

    /**
     * {@inheritDoc}
     */
    public function isSubscribedToMailChimpList(\XLite\Module\XC\MailChimp\Model\MailChimpList $list)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSubscribedToMailChimpList', [$list]);

        return parent::isSubscribedToMailChimpList($list);
    }

    /**
     * {@inheritDoc}
     */
    public function isSubscribedToMailChimpSegment(\XLite\Module\XC\MailChimp\Model\MailChimpSegment $segment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSubscribedToMailChimpSegment', [$segment]);

        return parent::isSubscribedToMailChimpSegment($segment);
    }

    /**
     * {@inheritDoc}
     */
    public function hasMailChimpSubscriptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasMailChimpSubscriptions', []);

        return parent::hasMailChimpSubscriptions();
    }

    /**
     * {@inheritDoc}
     */
    public function getMailChimpListsIds()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMailChimpListsIds', []);

        return parent::getMailChimpListsIds();
    }

    /**
     * {@inheritDoc}
     */
    public function checkSegmentsConditions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkSegmentsConditions', []);

        return parent::checkSegmentsConditions();
    }

    /**
     * {@inheritDoc}
     */
    public function checkGroupsConditions($listId, array $groupNameIds)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkGroupsConditions', [$listId, $groupNameIds]);

        return parent::checkGroupsConditions($listId, $groupNameIds);
    }

    /**
     * {@inheritDoc}
     */
    public function doSubscribeToMailChimpLists($listsIds)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'doSubscribeToMailChimpLists', [$listsIds]);

        return parent::doSubscribeToMailChimpLists($listsIds);
    }

    /**
     * {@inheritDoc}
     */
    public function doUnsubscribeFromMailChimpLists(array $listsIds)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'doUnsubscribeFromMailChimpLists', [$listsIds]);

        return parent::doUnsubscribeFromMailChimpLists($listsIds);
    }

    /**
     * {@inheritDoc}
     */
    public function addMailChimpLists(\XLite\Module\XC\MailChimp\Model\MailChimpList $mailChimpLists)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMailChimpLists', [$mailChimpLists]);

        return parent::addMailChimpLists($mailChimpLists);
    }

    /**
     * {@inheritDoc}
     */
    public function getMailChimpLists()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMailChimpLists', []);

        return parent::getMailChimpLists();
    }

    /**
     * {@inheritDoc}
     */
    public function addMailChimpSegments(\XLite\Module\XC\MailChimp\Model\MailChimpSegment $mailChimpSegments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMailChimpSegments', [$mailChimpSegments]);

        return parent::addMailChimpSegments($mailChimpSegments);
    }

    /**
     * {@inheritDoc}
     */
    public function getMailChimpSegments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMailChimpSegments', []);

        return parent::getMailChimpSegments();
    }

    /**
     * {@inheritDoc}
     */
    public function addMailChimpInterests(\XLite\Module\XC\MailChimp\Model\MailChimpGroupName $mailChimpGroupName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMailChimpInterests', [$mailChimpGroupName]);

        return parent::addMailChimpInterests($mailChimpGroupName);
    }

    /**
     * {@inheritDoc}
     */
    public function getMailChimpInterests()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMailChimpInterests', []);

        return parent::getMailChimpInterests();
    }

    /**
     * {@inheritDoc}
     */
    public function addConversation($conversation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConversation', [$conversation]);

        return parent::addConversation($conversation);
    }

    /**
     * {@inheritDoc}
     */
    public function getConversations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConversations', []);

        return parent::getConversations();
    }

    /**
     * {@inheritDoc}
     */
    public function countUnreadMessages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'countUnreadMessages', []);

        return parent::countUnreadMessages();
    }

    /**
     * {@inheritDoc}
     */
    public function countOwnUnreadMessages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'countOwnUnreadMessages', []);

        return parent::countOwnUnreadMessages();
    }

    /**
     * {@inheritDoc}
     */
    public function getNameForMessages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameForMessages', []);

        return parent::getNameForMessages();
    }

    /**
     * {@inheritDoc}
     */
    public function getVendorNameForMessages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVendorNameForMessages', []);

        return parent::getVendorNameForMessages();
    }

    /**
     * {@inheritDoc}
     */
    public function getXpaymentsCustomerId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXpaymentsCustomerId', []);

        return parent::getXpaymentsCustomerId();
    }

    /**
     * {@inheritDoc}
     */
    public function setXpaymentsCustomerId($xpaymentsCustomerId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setXpaymentsCustomerId', [$xpaymentsCustomerId]);

        return parent::setXpaymentsCustomerId($xpaymentsCustomerId);
    }

    /**
     * {@inheritDoc}
     */
    public function getXpaymentsTokenizationSettings()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXpaymentsTokenizationSettings', []);

        return parent::getXpaymentsTokenizationSettings();
    }

    /**
     * {@inheritDoc}
     */
    public function getXpaymentsCards()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXpaymentsCards', []);

        return parent::getXpaymentsCards();
    }

    /**
     * {@inheritDoc}
     */
    public function setXpaymentsDefaultCard($cardId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setXpaymentsDefaultCard', [$cardId]);

        return parent::setXpaymentsDefaultCard($cardId);
    }

    /**
     * {@inheritDoc}
     */
    public function removeXpaymentsCard($cardId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeXpaymentsCard', [$cardId]);

        return parent::removeXpaymentsCard($cardId);
    }

    /**
     * {@inheritDoc}
     */
    public function setReferer($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReferer', [$value]);

        return parent::setReferer($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setMembership(\XLite\Model\Membership $membership = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMembership', [$membership]);

        return parent::setMembership($membership);
    }

    /**
     * {@inheritDoc}
     */
    public function setPendingMembership(\XLite\Model\Membership $pendingMembership = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPendingMembership', [$pendingMembership]);

        return parent::setPendingMembership($pendingMembership);
    }

    /**
     * {@inheritDoc}
     */
    public function getMembershipId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMembershipId', []);

        return parent::getMembershipId();
    }

    /**
     * {@inheritDoc}
     */
    public function getPendingMembershipId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPendingMembershipId', []);

        return parent::getPendingMembershipId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName($useDefault = true, $shortName = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', [$useDefault, $shortName]);

        return parent::getName($useDefault, $shortName);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameFromDefaultAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameFromDefaultAddress', []);

        return parent::getNameFromDefaultAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function getBillingAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBillingAddress', []);

        return parent::getBillingAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function getShippingAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShippingAddress', []);

        return parent::getShippingAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setBillingAddress($new)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBillingAddress', [$new]);

        return parent::setBillingAddress($new);
    }

    /**
     * {@inheritDoc}
     */
    public function setShippingAddress($new)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShippingAddress', [$new]);

        return parent::setShippingAddress($new);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstAddress', []);

        return parent::getFirstAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function hasTaxExemption()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasTaxExemption', []);

        return parent::hasTaxExemption();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrdersCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrdersCount', []);

        return parent::getOrdersCount();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function enable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'enable', []);

        return parent::enable();
    }

    /**
     * {@inheritDoc}
     */
    public function disable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'disable', []);

        return parent::disable();
    }

    /**
     * {@inheritDoc}
     */
    public function isAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAdmin', []);

        return parent::isAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function create()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'create', []);

        return parent::create();
    }

    /**
     * {@inheritDoc}
     */
    public function update($cloneMode = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'update', [$cloneMode]);

        return parent::update($cloneMode);
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', []);

        return parent::delete();
    }

    /**
     * {@inheritDoc}
     */
    public function isSameAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSameAddress', []);

        return parent::isSameAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function isEqualAddress($strict = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEqualAddress', [$strict]);

        return parent::isEqualAddress($strict);
    }

    /**
     * {@inheritDoc}
     */
    public function cloneEntity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'cloneEntity', []);

        return parent::cloneEntity();
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage($flagCreate = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', [$flagCreate]);

        return parent::getLanguage($flagCreate);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrder(\XLite\Model\Order $order = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrder', [$order]);

        return parent::setOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordAlgo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordAlgo', []);

        return parent::getPasswordAlgo();
    }

    /**
     * {@inheritDoc}
     */
    public function mergeWithProfile(\XLite\Model\Profile $profile, $flag = 3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'mergeWithProfile', [$profile, $flag]);

        return parent::mergeWithProfile($profile, $flag);
    }

    /**
     * {@inheritDoc}
     */
    public function prepareBeforeCreate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prepareBeforeCreate', []);

        return parent::prepareBeforeCreate();
    }

    /**
     * {@inheritDoc}
     */
    public function prepareBeforeUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prepareBeforeUpdate', []);

        return parent::prepareBeforeUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function updateSearchFakeField()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateSearchFakeField', []);

        return parent::updateSearchFakeField();
    }

    /**
     * {@inheritDoc}
     */
    public function isPermissionAllowed($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPermissionAllowed', [$code]);

        return parent::isPermissionAllowed($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfileId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfileId', []);

        return parent::getProfileId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogin($login)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogin', [$login]);

        return parent::setLogin($login);
    }

    /**
     * {@inheritDoc}
     */
    public function getOldLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOldLogin', []);

        return parent::getOldLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function getLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogin', []);

        return parent::getLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordHint($passwordHint)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordHint', [$passwordHint]);

        return parent::setPasswordHint($passwordHint);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordHint()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordHint', []);

        return parent::getPasswordHint();
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordHintAnswer($passwordHintAnswer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordHintAnswer', [$passwordHintAnswer]);

        return parent::setPasswordHintAnswer($passwordHintAnswer);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordHintAnswer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordHintAnswer', []);

        return parent::getPasswordHintAnswer();
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordResetKey($passwordResetKey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordResetKey', [$passwordResetKey]);

        return parent::setPasswordResetKey($passwordResetKey);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordResetKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordResetKey', []);

        return parent::getPasswordResetKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordResetKeyDate($passwordResetKeyDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordResetKeyDate', [$passwordResetKeyDate]);

        return parent::setPasswordResetKeyDate($passwordResetKeyDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordResetKeyDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordResetKeyDate', []);

        return parent::getPasswordResetKeyDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccessLevel($accessLevel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccessLevel', [$accessLevel]);

        return parent::setAccessLevel($accessLevel);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessLevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessLevel', []);

        return parent::getAccessLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function setCmsProfileId($cmsProfileId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCmsProfileId', [$cmsProfileId]);

        return parent::setCmsProfileId($cmsProfileId);
    }

    /**
     * {@inheritDoc}
     */
    public function getCmsProfileId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCmsProfileId', []);

        return parent::getCmsProfileId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCmsName($cmsName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCmsName', [$cmsName]);

        return parent::setCmsName($cmsName);
    }

    /**
     * {@inheritDoc}
     */
    public function getCmsName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCmsName', []);

        return parent::getCmsName();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdded($added)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdded', [$added]);

        return parent::setAdded($added);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdded', []);

        return parent::getAdded();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstLogin($firstLogin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstLogin', [$firstLogin]);

        return parent::setFirstLogin($firstLogin);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstLogin', []);

        return parent::getFirstLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLogin($lastLogin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLogin', [$lastLogin]);

        return parent::setLastLogin($lastLogin);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLogin', []);

        return parent::getLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatusComment($statusComment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatusComment', [$statusComment]);

        return parent::setStatusComment($statusComment);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusComment', []);

        return parent::getStatusComment();
    }

    /**
     * {@inheritDoc}
     */
    public function getReferer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReferer', []);

        return parent::getReferer();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage($language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', [$language]);

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function setLastShippingId($lastShippingId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastShippingId', [$lastShippingId]);

        return parent::setLastShippingId($lastShippingId);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastShippingId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastShippingId', []);

        return parent::getLastShippingId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastPaymentId($lastPaymentId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastPaymentId', [$lastPaymentId]);

        return parent::setLastPaymentId($lastPaymentId);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastPaymentId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastPaymentId', []);

        return parent::getLastPaymentId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnonymous($anonymous)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnonymous', [$anonymous]);

        return parent::setAnonymous($anonymous);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnonymous()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnonymous', []);

        return parent::getAnonymous();
    }

    /**
     * {@inheritDoc}
     */
    public function setForceChangePassword($forceChangePassword)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setForceChangePassword', [$forceChangePassword]);

        return parent::setForceChangePassword($forceChangePassword);
    }

    /**
     * {@inheritDoc}
     */
    public function getForceChangePassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getForceChangePassword', []);

        return parent::getForceChangePassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateOfLoginAttempt($dateOfLoginAttempt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateOfLoginAttempt', [$dateOfLoginAttempt]);

        return parent::setDateOfLoginAttempt($dateOfLoginAttempt);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateOfLoginAttempt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateOfLoginAttempt', []);

        return parent::getDateOfLoginAttempt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountOfLoginAttempts($countOfLoginAttempts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountOfLoginAttempts', [$countOfLoginAttempts]);

        return parent::setCountOfLoginAttempts($countOfLoginAttempts);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountOfLoginAttempts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountOfLoginAttempts', []);

        return parent::getCountOfLoginAttempts();
    }

    /**
     * {@inheritDoc}
     */
    public function setSearchFakeField($searchFakeField)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSearchFakeField', [$searchFakeField]);

        return parent::setSearchFakeField($searchFakeField);
    }

    /**
     * {@inheritDoc}
     */
    public function getSearchFakeField()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSearchFakeField', []);

        return parent::getSearchFakeField();
    }

    /**
     * {@inheritDoc}
     */
    public function setXcPendingExport($xcPendingExport)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setXcPendingExport', [$xcPendingExport]);

        return parent::setXcPendingExport($xcPendingExport);
    }

    /**
     * {@inheritDoc}
     */
    public function getXcPendingExport()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXcPendingExport', []);

        return parent::getXcPendingExport();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrder', []);

        return parent::getOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function addEvent(\XLite\Model\OrderHistoryEvents $event)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEvent', [$event]);

        return parent::addEvent($event);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvent', []);

        return parent::getEvent();
    }

    /**
     * {@inheritDoc}
     */
    public function getMembership()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMembership', []);

        return parent::getMembership();
    }

    /**
     * {@inheritDoc}
     */
    public function getPendingMembership()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPendingMembership', []);

        return parent::getPendingMembership();
    }

    /**
     * {@inheritDoc}
     */
    public function addAddresses(\XLite\Model\Address $addresses)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAddresses', [$addresses]);

        return parent::addAddresses($addresses);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddresses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddresses', []);

        return parent::getAddresses();
    }

    /**
     * {@inheritDoc}
     */
    public function addRoles(\XLite\Model\Role $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRoles', [$roles]);

        return parent::addRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function logoffSessions($exceptCurrent = true, $flush = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'logoffSessions', [$exceptCurrent, $flush]);

        return parent::logoffSessions($exceptCurrent, $flush);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastCheckoutEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastCheckoutEmail', []);

        return parent::getLastCheckoutEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastCheckoutEmail($lastCheckoutEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastCheckoutEmail', [$lastCheckoutEmail]);

        return parent::setLastCheckoutEmail($lastCheckoutEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function buildDataForREST($withAssociations = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'buildDataForREST', [$withAssociations]);

        return parent::buildDataForREST($withAssociations);
    }

    /**
     * {@inheritDoc}
     */
    public function getModelAssociationsForREST()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModelAssociationsForREST', []);

        return parent::getModelAssociationsForREST();
    }

    /**
     * {@inheritDoc}
     */
    public function _getPreviousState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '_getPreviousState', []);

        return parent::_getPreviousState();
    }

    /**
     * {@inheritDoc}
     */
    public function map(array $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'map', [$data]);

        return parent::map($data);
    }

    /**
     * {@inheritDoc}
     */
    public function __unset($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__unset', [$name]);

        return parent::__unset($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepository()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepository', []);

        return parent::getRepository();
    }

    /**
     * {@inheritDoc}
     */
    public function checkCache()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkCache', []);

        return parent::checkCache();
    }

    /**
     * {@inheritDoc}
     */
    public function detach()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'detach', []);

        return parent::detach();
    }

    /**
     * {@inheritDoc}
     */
    public function __call($method, array $args = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', [$method, $args]);

        return parent::__call($method, $args);
    }

    /**
     * {@inheritDoc}
     */
    public function isPropertyExists($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPropertyExists', [$name]);

        return parent::isPropertyExists($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setterProperty($property, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setterProperty', [$property, $value]);

        return parent::setterProperty($property, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function getterProperty($property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getterProperty', [$property]);

        return parent::getterProperty($property);
    }

    /**
     * {@inheritDoc}
     */
    public function isPersistent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPersistent', []);

        return parent::isPersistent();
    }

    /**
     * {@inheritDoc}
     */
    public function isDetached()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDetached', []);

        return parent::isDetached();
    }

    /**
     * {@inheritDoc}
     */
    public function isManaged()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isManaged', []);

        return parent::isManaged();
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueIdentifierName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueIdentifierName', []);

        return parent::getUniqueIdentifierName();
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueIdentifier', []);

        return parent::getUniqueIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityName', []);

        return parent::getEntityName();
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldMetadata($property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldMetadata', [$property]);

        return parent::getFieldMetadata($property);
    }

    /**
     * {@inheritDoc}
     */
    public function processFiles($field, array $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'processFiles', [$field, $data]);

        return parent::processFiles($field, $data);
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldsDefinition($class = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldsDefinition', [$class]);

        return parent::getFieldsDefinition($class);
    }

    /**
     * {@inheritDoc}
     */
    public function prepareEntityBeforeCommit($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prepareEntityBeforeCommit', [$type]);

        return parent::prepareEntityBeforeCommit($type);
    }

    /**
     * {@inheritDoc}
     */
    public function isSerializable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSerializable', []);

        return parent::isSerializable();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
