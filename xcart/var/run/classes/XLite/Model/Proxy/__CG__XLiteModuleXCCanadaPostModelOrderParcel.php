<?php

namespace XLite\Model\Proxy\__CG__\XLite\Module\XC\CanadaPost\Model\Order;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Parcel extends \XLite\Module\XC\CanadaPost\Model\Order\Parcel implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

        return parent::__get($name);
    }

    /**
     * {@inheritDoc}
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

        return parent::__set($name, $value);
    }

    /**
     * {@inheritDoc}
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

        return parent::__isset($name);

    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'number', 'status', 'oldStatus', 'quoteType', 'order', 'items', 'shipment', 'boxWeight', 'boxWidth', 'boxLength', 'boxHeight', 'isDocument', 'isUnpackaged', 'isMailingTube', 'isOversized', 'notifyOnShipment', 'notifyOnException', 'notifyOnDelivery', 'optSignature', 'optCoverage', 'optAgeProof', 'optWayToDeliver', 'optNonDelivery', 'hasRemovedItems', 'apiCallErrors', '_previous_state'];
        }

        return ['__isInitialized__', 'id', 'number', 'status', 'oldStatus', 'quoteType', 'order', 'items', 'shipment', 'boxWeight', 'boxWidth', 'boxLength', 'boxHeight', 'isDocument', 'isUnpackaged', 'isMailingTube', 'isOversized', 'notifyOnShipment', 'notifyOnException', 'notifyOnDelivery', 'optSignature', 'optCoverage', 'optAgeProof', 'optWayToDeliver', 'optNonDelivery', 'hasRemovedItems', 'apiCallErrors', '_previous_state'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Parcel $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setOldStatus($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOldStatus', [$value]);

        return parent::setOldStatus($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrder(\XLite\Model\Order $order = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrder', [$order]);

        return parent::setOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function addItem(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Item $newItem)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addItem', [$newItem]);

        return parent::addItem($newItem);
    }

    /**
     * {@inheritDoc}
     */
    public function setShipment(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment $shipment = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShipment', [$shipment]);

        return parent::setShipment($shipment);
    }

    /**
     * {@inheritDoc}
     */
    public function cloneEntity($cloneItems = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'cloneEntity', [$cloneItems]);

        return parent::cloneEntity($cloneItems);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowedOptionClasses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowedOptionClasses', []);

        return parent::getAllowedOptionClasses();
    }

    /**
     * {@inheritDoc}
     */
    public function getDeliveryService()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeliveryService', []);

        return parent::getDeliveryService();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$value]);

        return parent::setStatus($value);
    }

    /**
     * {@inheritDoc}
     */
    public function canBeCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'canBeCreated', []);

        return parent::canBeCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function canBeProposed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'canBeProposed', []);

        return parent::canBeProposed();
    }

    /**
     * {@inheritDoc}
     */
    public function canBeTransmited()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'canBeTransmited', []);

        return parent::canBeTransmited();
    }

    /**
     * {@inheritDoc}
     */
    public function hasShipment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasShipment', []);

        return parent::hasShipment();
    }

    /**
     * {@inheritDoc}
     */
    public function hasItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasItems', []);

        return parent::hasItems();
    }

    /**
     * {@inheritDoc}
     */
    public function getAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmount', []);

        return parent::getAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubtotal', []);

        return parent::getSubtotal();
    }

    /**
     * {@inheritDoc}
     */
    public function getWeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeight', []);

        return parent::getWeight();
    }

    /**
     * {@inheritDoc}
     */
    public function getWeightInKg($adjustFloatValue = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeightInKg', [$adjustFloatValue]);

        return parent::getWeightInKg($adjustFloatValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getBoxWeightInKg($adjustFloatValue = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBoxWeightInKg', [$adjustFloatValue]);

        return parent::getBoxWeightInKg($adjustFloatValue);
    }

    /**
     * {@inheritDoc}
     */
    public function isOverWeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isOverWeight', []);

        return parent::isOverWeight();
    }

    /**
     * {@inheritDoc}
     */
    public function isEditable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEditable', []);

        return parent::isEditable();
    }

    /**
     * {@inheritDoc}
     */
    public function isDeliveryToPostOffice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeliveryToPostOffice', []);

        return parent::isDeliveryToPostOffice();
    }

    /**
     * {@inheritDoc}
     */
    public function areAPICallsAllowed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'areAPICallsAllowed', []);

        return parent::areAPICallsAllowed();
    }

    /**
     * {@inheritDoc}
     */
    public function getApiCallErrors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiCallErrors', []);

        return parent::getApiCallErrors();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumber($number)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumber', [$number]);

        return parent::setNumber($number);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumber', []);

        return parent::getNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuoteType($quoteType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuoteType', [$quoteType]);

        return parent::setQuoteType($quoteType);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuoteType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuoteType', []);

        return parent::getQuoteType();
    }

    /**
     * {@inheritDoc}
     */
    public function setBoxWeight($boxWeight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBoxWeight', [$boxWeight]);

        return parent::setBoxWeight($boxWeight);
    }

    /**
     * {@inheritDoc}
     */
    public function getBoxWeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBoxWeight', []);

        return parent::getBoxWeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setBoxWidth($boxWidth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBoxWidth', [$boxWidth]);

        return parent::setBoxWidth($boxWidth);
    }

    /**
     * {@inheritDoc}
     */
    public function getBoxWidth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBoxWidth', []);

        return parent::getBoxWidth();
    }

    /**
     * {@inheritDoc}
     */
    public function setBoxLength($boxLength)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBoxLength', [$boxLength]);

        return parent::setBoxLength($boxLength);
    }

    /**
     * {@inheritDoc}
     */
    public function getBoxLength()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBoxLength', []);

        return parent::getBoxLength();
    }

    /**
     * {@inheritDoc}
     */
    public function getBoxLengthInCm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBoxLengthInCm', []);

        return parent::getBoxLengthInCm();
    }

    /**
     * {@inheritDoc}
     */
    public function getBoxWidthInCm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBoxWidthInCm', []);

        return parent::getBoxWidthInCm();
    }

    /**
     * {@inheritDoc}
     */
    public function getBoxHeightInCm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBoxHeightInCm', []);

        return parent::getBoxHeightInCm();
    }

    /**
     * {@inheritDoc}
     */
    public function setBoxHeightInCm($boxHeight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBoxHeightInCm', [$boxHeight]);

        return parent::setBoxHeightInCm($boxHeight);
    }

    /**
     * {@inheritDoc}
     */
    public function setBoxWidthInCm($boxWidth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBoxWidthInCm', [$boxWidth]);

        return parent::setBoxWidthInCm($boxWidth);
    }

    /**
     * {@inheritDoc}
     */
    public function setBoxLengthInCm($boxLength)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBoxLengthInCm', [$boxLength]);

        return parent::setBoxLengthInCm($boxLength);
    }

    /**
     * {@inheritDoc}
     */
    public function setBoxHeight($boxHeight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBoxHeight', [$boxHeight]);

        return parent::setBoxHeight($boxHeight);
    }

    /**
     * {@inheritDoc}
     */
    public function getBoxHeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBoxHeight', []);

        return parent::getBoxHeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDocument($isDocument)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsDocument', [$isDocument]);

        return parent::setIsDocument($isDocument);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsDocument()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsDocument', []);

        return parent::getIsDocument();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsUnpackaged($isUnpackaged)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsUnpackaged', [$isUnpackaged]);

        return parent::setIsUnpackaged($isUnpackaged);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsUnpackaged()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsUnpackaged', []);

        return parent::getIsUnpackaged();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsMailingTube($isMailingTube)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsMailingTube', [$isMailingTube]);

        return parent::setIsMailingTube($isMailingTube);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsMailingTube()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsMailingTube', []);

        return parent::getIsMailingTube();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsOversized($isOversized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsOversized', [$isOversized]);

        return parent::setIsOversized($isOversized);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsOversized()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsOversized', []);

        return parent::getIsOversized();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotifyOnShipment($notifyOnShipment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotifyOnShipment', [$notifyOnShipment]);

        return parent::setNotifyOnShipment($notifyOnShipment);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotifyOnShipment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotifyOnShipment', []);

        return parent::getNotifyOnShipment();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotifyOnException($notifyOnException)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotifyOnException', [$notifyOnException]);

        return parent::setNotifyOnException($notifyOnException);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotifyOnException()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotifyOnException', []);

        return parent::getNotifyOnException();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotifyOnDelivery($notifyOnDelivery)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotifyOnDelivery', [$notifyOnDelivery]);

        return parent::setNotifyOnDelivery($notifyOnDelivery);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotifyOnDelivery()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotifyOnDelivery', []);

        return parent::getNotifyOnDelivery();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptSignature($optSignature)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptSignature', [$optSignature]);

        return parent::setOptSignature($optSignature);
    }

    /**
     * {@inheritDoc}
     */
    public function getOptSignature()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptSignature', []);

        return parent::getOptSignature();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptCoverage($optCoverage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptCoverage', [$optCoverage]);

        return parent::setOptCoverage($optCoverage);
    }

    /**
     * {@inheritDoc}
     */
    public function getOptCoverage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptCoverage', []);

        return parent::getOptCoverage();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptAgeProof($optAgeProof)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptAgeProof', [$optAgeProof]);

        return parent::setOptAgeProof($optAgeProof);
    }

    /**
     * {@inheritDoc}
     */
    public function getOptAgeProof()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptAgeProof', []);

        return parent::getOptAgeProof();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptWayToDeliver($optWayToDeliver)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptWayToDeliver', [$optWayToDeliver]);

        return parent::setOptWayToDeliver($optWayToDeliver);
    }

    /**
     * {@inheritDoc}
     */
    public function getOptWayToDeliver()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptWayToDeliver', []);

        return parent::getOptWayToDeliver();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptNonDelivery($optNonDelivery)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptNonDelivery', [$optNonDelivery]);

        return parent::setOptNonDelivery($optNonDelivery);
    }

    /**
     * {@inheritDoc}
     */
    public function getOptNonDelivery()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptNonDelivery', []);

        return parent::getOptNonDelivery();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrder', []);

        return parent::getOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrency', []);

        return parent::getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function addItems(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Item $items)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addItems', [$items]);

        return parent::addItems($items);
    }

    /**
     * {@inheritDoc}
     */
    public function getItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItems', []);

        return parent::getItems();
    }

    /**
     * {@inheritDoc}
     */
    public function getShipment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShipment', []);

        return parent::getShipment();
    }

    /**
     * {@inheritDoc}
     */
    public function removeIrrelevantParcelItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIrrelevantParcelItems', []);

        return parent::removeIrrelevantParcelItems();
    }

    /**
     * {@inheritDoc}
     */
    public function hasRemovedItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRemovedItems', []);

        return parent::hasRemovedItems();
    }

    /**
     * {@inheritDoc}
     */
    public function buildDataForREST($withAssociations = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'buildDataForREST', [$withAssociations]);

        return parent::buildDataForREST($withAssociations);
    }

    /**
     * {@inheritDoc}
     */
    public function getModelAssociationsForREST()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModelAssociationsForREST', []);

        return parent::getModelAssociationsForREST();
    }

    /**
     * {@inheritDoc}
     */
    public function _getPreviousState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '_getPreviousState', []);

        return parent::_getPreviousState();
    }

    /**
     * {@inheritDoc}
     */
    public function map(array $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'map', [$data]);

        return parent::map($data);
    }

    /**
     * {@inheritDoc}
     */
    public function __unset($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__unset', [$name]);

        return parent::__unset($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepository()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepository', []);

        return parent::getRepository();
    }

    /**
     * {@inheritDoc}
     */
    public function checkCache()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkCache', []);

        return parent::checkCache();
    }

    /**
     * {@inheritDoc}
     */
    public function detach()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'detach', []);

        return parent::detach();
    }

    /**
     * {@inheritDoc}
     */
    public function __call($method, array $args = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', [$method, $args]);

        return parent::__call($method, $args);
    }

    /**
     * {@inheritDoc}
     */
    public function isPropertyExists($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPropertyExists', [$name]);

        return parent::isPropertyExists($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setterProperty($property, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setterProperty', [$property, $value]);

        return parent::setterProperty($property, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function getterProperty($property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getterProperty', [$property]);

        return parent::getterProperty($property);
    }

    /**
     * {@inheritDoc}
     */
    public function isPersistent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPersistent', []);

        return parent::isPersistent();
    }

    /**
     * {@inheritDoc}
     */
    public function isDetached()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDetached', []);

        return parent::isDetached();
    }

    /**
     * {@inheritDoc}
     */
    public function isManaged()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isManaged', []);

        return parent::isManaged();
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueIdentifierName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueIdentifierName', []);

        return parent::getUniqueIdentifierName();
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueIdentifier', []);

        return parent::getUniqueIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityName', []);

        return parent::getEntityName();
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldMetadata($property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldMetadata', [$property]);

        return parent::getFieldMetadata($property);
    }

    /**
     * {@inheritDoc}
     */
    public function update()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'update', []);

        return parent::update();
    }

    /**
     * {@inheritDoc}
     */
    public function create()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'create', []);

        return parent::create();
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', []);

        return parent::delete();
    }

    /**
     * {@inheritDoc}
     */
    public function processFiles($field, array $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'processFiles', [$field, $data]);

        return parent::processFiles($field, $data);
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldsDefinition($class = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldsDefinition', [$class]);

        return parent::getFieldsDefinition($class);
    }

    /**
     * {@inheritDoc}
     */
    public function prepareEntityBeforeCommit($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prepareEntityBeforeCommit', [$type]);

        return parent::prepareEntityBeforeCommit($type);
    }

    /**
     * {@inheritDoc}
     */
    public function isSerializable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSerializable', []);

        return parent::isSerializable();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
