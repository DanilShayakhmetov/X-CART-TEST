<?php

namespace XLite\Model\Proxy\__CG__\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Tracking extends \XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment\Tracking implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

        return parent::__get($name);
    }

    /**
     * {@inheritDoc}
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

        return parent::__set($name, $value);
    }

    /**
     * {@inheritDoc}
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

        return parent::__isset($name);

    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'shipment', 'deliveryOptions', 'significantEvents', 'files', 'expiry', 'pin', 'activeExists', 'archiveExists', 'destinationPostalId', 'expectedDeliveryDate', 'changedExpectedDate', 'changedExpectedDeliveryReason', 'mailedByCustomerNumber', 'mailedOnBehalfOfCustomerNumber', 'originalPin', 'serviceName', 'serviceName_2', 'customerRef_1', 'customerRef_2', 'returnPin', 'signatureImageExists', 'suppressSignature', '_previous_state'];
        }

        return ['__isInitialized__', 'id', 'shipment', 'deliveryOptions', 'significantEvents', 'files', 'expiry', 'pin', 'activeExists', 'archiveExists', 'destinationPostalId', 'expectedDeliveryDate', 'changedExpectedDate', 'changedExpectedDeliveryReason', 'mailedByCustomerNumber', 'mailedOnBehalfOfCustomerNumber', 'originalPin', 'serviceName', 'serviceName_2', 'customerRef_1', 'customerRef_2', 'returnPin', 'signatureImageExists', 'suppressSignature', '_previous_state'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Tracking $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function addDeliveryOption(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment\Tracking\DeliveryOption $newDeliveryOption)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDeliveryOption', [$newDeliveryOption]);

        return parent::addDeliveryOption($newDeliveryOption);
    }

    /**
     * {@inheritDoc}
     */
    public function addSignificantEvent(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment\Tracking\SignificantEvent $newSignificantEvent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSignificantEvent', [$newSignificantEvent]);

        return parent::addSignificantEvent($newSignificantEvent);
    }

    /**
     * {@inheritDoc}
     */
    public function setShipment(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment $shipment = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShipment', [$shipment]);

        return parent::setShipment($shipment);
    }

    /**
     * {@inheritDoc}
     */
    public function addFile(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment\Tracking\File $newFile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFile', [$newFile]);

        return parent::addFile($newFile);
    }

    /**
     * {@inheritDoc}
     */
    public function downloadFiles($flush = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'downloadFiles', [$flush]);

        return parent::downloadFiles($flush);
    }

    /**
     * {@inheritDoc}
     */
    public function hasFiles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasFiles', []);

        return parent::hasFiles();
    }

    /**
     * {@inheritDoc}
     */
    public function getRealTrackingPin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRealTrackingPin', []);

        return parent::getRealTrackingPin();
    }

    /**
     * {@inheritDoc}
     */
    public function updateExpiry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateExpiry', []);

        return parent::updateExpiry();
    }

    /**
     * {@inheritDoc}
     */
    public function isExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isExpired', []);

        return parent::isExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function getSignatureImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSignatureImage', []);

        return parent::getSignatureImage();
    }

    /**
     * {@inheritDoc}
     */
    public function getDeliveryConfirmationCertificate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeliveryConfirmationCertificate', []);

        return parent::getDeliveryConfirmationCertificate();
    }

    /**
     * {@inheritDoc}
     */
    public function getFileByDocType($docType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileByDocType', [$docType]);

        return parent::getFileByDocType($docType);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpiry($expiry)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpiry', [$expiry]);

        return parent::setExpiry($expiry);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpiry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpiry', []);

        return parent::getExpiry();
    }

    /**
     * {@inheritDoc}
     */
    public function setPin($pin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPin', [$pin]);

        return parent::setPin($pin);
    }

    /**
     * {@inheritDoc}
     */
    public function getPin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPin', []);

        return parent::getPin();
    }

    /**
     * {@inheritDoc}
     */
    public function setActiveExists($activeExists)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActiveExists', [$activeExists]);

        return parent::setActiveExists($activeExists);
    }

    /**
     * {@inheritDoc}
     */
    public function getActiveExists()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActiveExists', []);

        return parent::getActiveExists();
    }

    /**
     * {@inheritDoc}
     */
    public function setArchiveExists($archiveExists)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArchiveExists', [$archiveExists]);

        return parent::setArchiveExists($archiveExists);
    }

    /**
     * {@inheritDoc}
     */
    public function getArchiveExists()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArchiveExists', []);

        return parent::getArchiveExists();
    }

    /**
     * {@inheritDoc}
     */
    public function setDestinationPostalId($destinationPostalId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDestinationPostalId', [$destinationPostalId]);

        return parent::setDestinationPostalId($destinationPostalId);
    }

    /**
     * {@inheritDoc}
     */
    public function getDestinationPostalId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDestinationPostalId', []);

        return parent::getDestinationPostalId();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpectedDeliveryDate($expectedDeliveryDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpectedDeliveryDate', [$expectedDeliveryDate]);

        return parent::setExpectedDeliveryDate($expectedDeliveryDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpectedDeliveryDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpectedDeliveryDate', []);

        return parent::getExpectedDeliveryDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setChangedExpectedDate($changedExpectedDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChangedExpectedDate', [$changedExpectedDate]);

        return parent::setChangedExpectedDate($changedExpectedDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getChangedExpectedDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChangedExpectedDate', []);

        return parent::getChangedExpectedDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setChangedExpectedDeliveryReason($changedExpectedDeliveryReason)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChangedExpectedDeliveryReason', [$changedExpectedDeliveryReason]);

        return parent::setChangedExpectedDeliveryReason($changedExpectedDeliveryReason);
    }

    /**
     * {@inheritDoc}
     */
    public function getChangedExpectedDeliveryReason()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChangedExpectedDeliveryReason', []);

        return parent::getChangedExpectedDeliveryReason();
    }

    /**
     * {@inheritDoc}
     */
    public function setMailedByCustomerNumber($mailedByCustomerNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMailedByCustomerNumber', [$mailedByCustomerNumber]);

        return parent::setMailedByCustomerNumber($mailedByCustomerNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getMailedByCustomerNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMailedByCustomerNumber', []);

        return parent::getMailedByCustomerNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setMailedOnBehalfOfCustomerNumber($mailedOnBehalfOfCustomerNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMailedOnBehalfOfCustomerNumber', [$mailedOnBehalfOfCustomerNumber]);

        return parent::setMailedOnBehalfOfCustomerNumber($mailedOnBehalfOfCustomerNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getMailedOnBehalfOfCustomerNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMailedOnBehalfOfCustomerNumber', []);

        return parent::getMailedOnBehalfOfCustomerNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginalPin($originalPin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginalPin', [$originalPin]);

        return parent::setOriginalPin($originalPin);
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginalPin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginalPin', []);

        return parent::getOriginalPin();
    }

    /**
     * {@inheritDoc}
     */
    public function setServiceName($serviceName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServiceName', [$serviceName]);

        return parent::setServiceName($serviceName);
    }

    /**
     * {@inheritDoc}
     */
    public function getServiceName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServiceName', []);

        return parent::getServiceName();
    }

    /**
     * {@inheritDoc}
     */
    public function setServiceName2($serviceName2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServiceName2', [$serviceName2]);

        return parent::setServiceName2($serviceName2);
    }

    /**
     * {@inheritDoc}
     */
    public function getServiceName2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServiceName2', []);

        return parent::getServiceName2();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomerRef1($customerRef1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomerRef1', [$customerRef1]);

        return parent::setCustomerRef1($customerRef1);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomerRef1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomerRef1', []);

        return parent::getCustomerRef1();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomerRef2($customerRef2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomerRef2', [$customerRef2]);

        return parent::setCustomerRef2($customerRef2);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomerRef2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomerRef2', []);

        return parent::getCustomerRef2();
    }

    /**
     * {@inheritDoc}
     */
    public function setReturnPin($returnPin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReturnPin', [$returnPin]);

        return parent::setReturnPin($returnPin);
    }

    /**
     * {@inheritDoc}
     */
    public function getReturnPin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReturnPin', []);

        return parent::getReturnPin();
    }

    /**
     * {@inheritDoc}
     */
    public function setSignatureImageExists($signatureImageExists)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSignatureImageExists', [$signatureImageExists]);

        return parent::setSignatureImageExists($signatureImageExists);
    }

    /**
     * {@inheritDoc}
     */
    public function getSignatureImageExists()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSignatureImageExists', []);

        return parent::getSignatureImageExists();
    }

    /**
     * {@inheritDoc}
     */
    public function setSuppressSignature($suppressSignature)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSuppressSignature', [$suppressSignature]);

        return parent::setSuppressSignature($suppressSignature);
    }

    /**
     * {@inheritDoc}
     */
    public function getSuppressSignature()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSuppressSignature', []);

        return parent::getSuppressSignature();
    }

    /**
     * {@inheritDoc}
     */
    public function getShipment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShipment', []);

        return parent::getShipment();
    }

    /**
     * {@inheritDoc}
     */
    public function addDeliveryOptions(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment\Tracking\DeliveryOption $deliveryOptions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDeliveryOptions', [$deliveryOptions]);

        return parent::addDeliveryOptions($deliveryOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeliveryOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeliveryOptions', []);

        return parent::getDeliveryOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function addSignificantEvents(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment\Tracking\SignificantEvent $significantEvents)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSignificantEvents', [$significantEvents]);

        return parent::addSignificantEvents($significantEvents);
    }

    /**
     * {@inheritDoc}
     */
    public function getSignificantEvents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSignificantEvents', []);

        return parent::getSignificantEvents();
    }

    /**
     * {@inheritDoc}
     */
    public function addFiles(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment\Tracking\File $files)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFiles', [$files]);

        return parent::addFiles($files);
    }

    /**
     * {@inheritDoc}
     */
    public function getFiles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFiles', []);

        return parent::getFiles();
    }

    /**
     * {@inheritDoc}
     */
    public function buildDataForREST($withAssociations = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'buildDataForREST', [$withAssociations]);

        return parent::buildDataForREST($withAssociations);
    }

    /**
     * {@inheritDoc}
     */
    public function getModelAssociationsForREST()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModelAssociationsForREST', []);

        return parent::getModelAssociationsForREST();
    }

    /**
     * {@inheritDoc}
     */
    public function _getPreviousState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '_getPreviousState', []);

        return parent::_getPreviousState();
    }

    /**
     * {@inheritDoc}
     */
    public function map(array $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'map', [$data]);

        return parent::map($data);
    }

    /**
     * {@inheritDoc}
     */
    public function __unset($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__unset', [$name]);

        return parent::__unset($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepository()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepository', []);

        return parent::getRepository();
    }

    /**
     * {@inheritDoc}
     */
    public function checkCache()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkCache', []);

        return parent::checkCache();
    }

    /**
     * {@inheritDoc}
     */
    public function detach()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'detach', []);

        return parent::detach();
    }

    /**
     * {@inheritDoc}
     */
    public function __call($method, array $args = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', [$method, $args]);

        return parent::__call($method, $args);
    }

    /**
     * {@inheritDoc}
     */
    public function isPropertyExists($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPropertyExists', [$name]);

        return parent::isPropertyExists($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setterProperty($property, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setterProperty', [$property, $value]);

        return parent::setterProperty($property, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function getterProperty($property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getterProperty', [$property]);

        return parent::getterProperty($property);
    }

    /**
     * {@inheritDoc}
     */
    public function isPersistent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPersistent', []);

        return parent::isPersistent();
    }

    /**
     * {@inheritDoc}
     */
    public function isDetached()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDetached', []);

        return parent::isDetached();
    }

    /**
     * {@inheritDoc}
     */
    public function isManaged()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isManaged', []);

        return parent::isManaged();
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueIdentifierName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueIdentifierName', []);

        return parent::getUniqueIdentifierName();
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueIdentifier', []);

        return parent::getUniqueIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityName', []);

        return parent::getEntityName();
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldMetadata($property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldMetadata', [$property]);

        return parent::getFieldMetadata($property);
    }

    /**
     * {@inheritDoc}
     */
    public function update()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'update', []);

        return parent::update();
    }

    /**
     * {@inheritDoc}
     */
    public function create()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'create', []);

        return parent::create();
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', []);

        return parent::delete();
    }

    /**
     * {@inheritDoc}
     */
    public function processFiles($field, array $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'processFiles', [$field, $data]);

        return parent::processFiles($field, $data);
    }

    /**
     * {@inheritDoc}
     */
    public function cloneEntity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'cloneEntity', []);

        return parent::cloneEntity();
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldsDefinition($class = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldsDefinition', [$class]);

        return parent::getFieldsDefinition($class);
    }

    /**
     * {@inheritDoc}
     */
    public function prepareEntityBeforeCommit($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prepareEntityBeforeCommit', [$type]);

        return parent::prepareEntityBeforeCommit($type);
    }

    /**
     * {@inheritDoc}
     */
    public function isSerializable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSerializable', []);

        return parent::isSerializable();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
